---
title: "Vulnerability Analysis"
subtitle: "Georgia Country Climate and Development Report"
author:
  - name: "Renato Vargas"
    id: rv
    # email: renovargas@gmail.com
    affiliation: 
      - name: Consultant for The World Bank
  # - name: "Julie Rozenberg"
  #   id: nr
  #   # email: 
  #   affiliation: 
  #     - name: The World Bank
format: 
  html:
    toc: true
bibliography: references_vulnerability.bib
editor_options: 
  chunk_output_type: console
---

# Introduction

In analysis, we estimate number of people under vulnerable circumstances.

"The vulnerability of a household to an extreme weather event will depend on the characteristics of the household that determine the event’s initial impact and the ability of a household to cope with that event (...). This is reflected in the IPCC definition, vulnerability includes both 'the sensitivity or susceptibility to harm' and 'the lack of capacity to cope and adapt'" [@doan2023].

# Preliminaries

```{r}
#| warning: false
#| message: false
#| label: preliminaries

# Clean workspace
rm(list = ls())

# Georgia country ISO code
iso <- "GEO"

# Survey year
survey_year <- 2023

# Exchange rate USD per GEL
er <- 0.37

# Years of interest for our macroeconomic scenario analysis
# analysis_years <- c(2030, 2050)
```

We will use the following libraries for this exercise.

```{r}
#| warning: false
#| message: false
#| label: libs

library(tidyverse)
library(haven)
library(readxl)
library(openxlsx)
library(gt)
library(sf)
library(tmap)
# library(raster)
```

## Datasets 

We use data from the 2023 survey for the Labor Split and data from the 2022 survey for the household expenditure and capital shares in In mil. GEL per year per household type.

```{r}
#| warning: false
#| message: false
#| label: datasets
#| lst-label: original-datasets

# Household Unique ID, Weights, Location and other basic variables
hh_basics <- read_sav(
  "data/ilcs_2023/sysschedule.sav") |>
  mutate(
    UID = as.integer(UID))

# Household size (includes no. of family members)
hh_size <- read_sav(
  "data/ilcs_2023/familysize.sav")|> 
  mutate(
    UID = as.integer(UID))

# Processed income at household level
hh_income <- read_sav(
  "data/ilcs_2023/tblincomes.sav")|> 
  mutate(
    UID = as.integer(UID))

# Consumption aggregate at household level 
hh_expenditure <- read_sav(
  "data/ilcs_2023/tblexpenditures.sav")|> 
  rename(# rename total expenditure variables
         total_expenditure = MTlianixarjebi_,
         total_expenditure_aeq06 = MTlianimoxmareba_EqAdScale,
         total_expenditure_aeq08 = Mtlianimoxmareba_EqAdScale_08) |> 
  mutate(
    UID = as.integer(UID))

# Characteristics of the dwelling
hh_chars <- read_sav(
  "data/ilcs_2023/tblshinda01.sav")|>
  mutate(
    UID = as.integer(UID))

# Persons (pp)
pp <- read_sav(
  "data/ilcs_2023/tblshinda02.sav") |> 
  mutate(
    UID = as.integer(UID),
    MemberNo = as.integer(MemberNo))

# Labor (pp)
pp_labor <- read_sav(
  "data/ilcs_2023/tblshinda05_1.sav") |> 
  mutate(
    UID = as.integer(UID),
    MemberNo = as.integer(MemberNo),
    Q5  = as.integer(Q5),
    Q12 = as.integer(Q12)) 

# Poverty
poverty <- read_dta(
  "data/ilcs_2023/POVERTY_stata.dta") |> 
  mutate(
    UID = as.integer(UID))

# Ind. Poverty
ind_poverty <- read_dta(
  "data/ilcs_2023/IND_POVERTY_stata.dta") |> 
  rename(MemberNo = memberno) |> 
  mutate(
    UID = as.integer(UID),
    MemberNo = as.integer(MemberNo))

# Exposure
floods <- read.csv(
  "data/exposure/floods/df_exposure_100.csv"
)

floods_all_returns <- read.csv(
  "data/exposure/floods/exposure_allrt_v3.0.csv")

drought_landslide <- read_excel(
    "data/exposure/drought_landslides/Drought_Landslide_Vulnerability_GEO.xlsx",
    sheet = "vulnerabilty_geo",
    col_names = T
  )

# Maps
adm1 <- sf::read_sf("data/gis/geo-adm1.shp") |> 
  dplyr::select(RegNo, region, ADM1_PCODE, ADM1_EN, ADM1_KA, geometry) |> 
  dplyr::arrange(ADM1_PCODE)
  
```

## Look-up tables

```{r}
#| warning: false
#| message: false
#| label: look-up-tables

sam_activities <- read_excel(
    "data/sam/classifications.xlsx",
    sheet = "SAM-REV2",
    col_names = T,
    col_types = "text",
  )

sam_factors <- read_excel(
    "data/sam/classifications.xlsx",
    sheet = "SAM factors",
    col_names = T,
    col_types = "text",
  )

coicop <- read_excel(
    "data/sam/classifications.xlsx",
    sheet = "COICOP",
    col_names = T,
    col_types = "text",
  ) |> 
  mutate(simple_code = as.integer(gsub("\\.", "", Coicop)))

coicop_filtered <- coicop |> 
  filter( nchar(as.character(simple_code)) >= 5)

```

# Vulnerability indicators

## Income

Following the methodology [@doan2023] this identifies the share of households that have income or consumption less than 1.5 times the poverty line. In the guidance paper, they use $2.15 (2017 PPP), but in our case, we use the official poverty line of Georgia for the year 2023 of 212.81 GEL per cápita (adult equivalent) per month. To be consistent with country assessments, we use consumption and not income, but to be consistent with the methodology paper, we continue to call this variable income.

```{r}
#| warning: false
#| message: false
#| label: vulnerability-income

# Poverty line
poverty_line <- poverty$pline[1]
income_threshold <- poverty_line * 1.5

hh_vulnerable <- poverty |> 
  select(
    QuartNo,
    UID,
    DiaryID,
    RegNo,
    type,
    weights_quar, # Sampling weights of the HH
    weights,      # HH weights
    hhsize,       # Number of HH members
    Childern,     # (note typo) Children
    Adult,        # Adolescents 8-15
    Working_age_man,
    Working_age_Woman,
    Pensioner_age_man,
    Pensioner_age_Woman,
    aecons,
    aeinc,
    pline,
    quintilc,
    decilc) |> 
  mutate(
    vulnerability_income = if_else(
      aecons < income_threshold, 1, 0))
```

## Education

Education to switch livelihoods or to access information and resources is proxied by a variable reflecting whether the household has an adult that has completed primary education.  The GMD is used because this allows us to have information on education and income for the same household which allows us to know whether an individual is deprived on one or both dimensions [@doan2023]. The `poverty` dataset already has the education level of the head of household. However, this calls for any member having at least primary education, which makes sense, because literate family members often bridge the understanding gap for illiterate ones, regardless of head of family status.

```{r}
#| warning: false
#| message: false
#| label: vulnerability-education

vulnerable_education <- pp |>
  select(UID, Education) |> 
  mutate(
    educated_member = case_when(
      Education < 4 ~ 0, # "4. Primary education"
      Education >= 4 ~ 1,
      TRUE ~ 0 )) |> 
  group_by(UID) |> 
  summarize(
    educated_members = sum(educated_member, na.rm = T),
    vulnerability_education = if_else(
      educated_members == 0, 1, 0
    )
  )

educ_vulnerable_hh_unweighted <- sum(
  vulnerable_education$vulnerability_education)
```

In the entire dataset `{r} educ_vulnerable_hh_unweighted` households (unweighted) meet the education vulnerability criteria. Among the survey households, up to 9 members could be educated with the following distribution. This is a positive metric for Georgia.

```{r}
#| warning: false
#| message: false
#| label: fig-hh-education
#| fig-cap: "Households for each number of educated members"

educated_data <- as.data.frame(
  table(vulnerable_education$educated_members))
colnames(educated_data) <- c("educated_members", "count")

# Convert educated_members to numeric
educated_data$educated_members <- as.numeric(
  as.character(educated_data$educated_members))

# The graph
ggplot(educated_data, aes(x = educated_members, y = count)) +
  geom_bar(stat = "identity", fill = "skyblue", color = "black") +
  geom_text(aes(label = count), vjust = -0.5, size = 4) +  # Add labels above bars
  scale_x_continuous(breaks = educated_data$educated_members) +  # Set discrete ticks
  labs(
    title = "Distribution of Educated Members",
    x = "Number of Educated Members",
    y = "Frequency"
  ) +
  theme_minimal()

vulnerable_education <- vulnerable_education |> 
  select(-educated_members)
```


## Access to water

"When shocks hit, access to these services is an important determinant of the impact of the shock on welfare. For example, with access to improved drinking water, contaminated water from flooding and storms, or lack of water due to drought has less of an impact. Nevertheless, it is essential to acknowledge that the current indicator of access to improved drinking water, often represented by covered wells in low-income countries, may not sufficiently reflect susceptibility to contamination during extreme events such as floods or droughts. Therefore, there is a need for future work to refine this indicator by considering a potentially higher threshold. Metrics such as “improved piped water” can offer a more precise assessment of the infrastructure safeguarding against water-related risks in the event of shocks." [@doan2023]

We take note of this caveat and choose the threshold water supply system installed in the dwelling and water system tap in the yard or vicinity as counting towards this dimension from the possible options below:

1. The water supply system installed in the dwelling
2. The water system tap in the yard or vicinity
3. The well in the yard or vicinity
4. Natural spring in the yard or vicinity
5. River, lake, spring, channel
6. Bought water
7. Other

```{r}
#| warning: false
#| message: false
#| label: vulnerability-water

vulnerable_water <- poverty |> 
  select(UID, WaterSource) |> 
  mutate(
    vulnerability_water = if_else(
      WaterSource < 3, 0, 1)) |> 
  select(-WaterSource)

# We check the distribution

as.data.frame(table(vulnerable_water$vulnerability_water)) |> 
  gt()
```

## Access to electricity

"With access to electricity, households are more likely to have assets such as fans that can help with heatwaves. A fuller discussion is available in the World Bank’s Lifelines report (Hallegatte et al, 2019). Whilst not a final selection of assets and infrastructure that matter for determining the initial loss of the shock, these measures provide a good first estimate to stimulate discussion." [@doan2023] Variable `q11_3` from the poverty dataset is a dummy that determines whether the household has access to electricity.

```{r}
#| warning: false
#| message: false
#| label: vulnerability-electricity

vulnerable_electricity <- poverty |> 
  select(UID, q11_3) |> 
  mutate(
    vulnerability_electricity = if_else(
      q11_3 != 1, 1, 0)) |> 
  select(-q11_3)

# We check the distribution

as.data.frame(table(vulnerable_electricity$vulnerability_electricity)) |> 
  gt()
```

Now, this is not a source of variation in the case of Georgia, since 100% of households report having access to electricity, but the methodology also mentions that "Access to markets and services, access to early warning systems, sanitation, and building and infrastructure quality are also playing a key role in determining disasters’ impacts, and has been included in other estimates, but is left for future inclusion here." [@doan2023]. Both sanitation and building infrastructure quality, proxied by wall materials could be included in Georgia's estimates. When it comes to sanitation, there is still a gap that the country needs to close. 

## Access to sanitation

For this variable (`TypeOfToilet`) we have the following categories, of which we choose "own flush toilet connected to the sewerage system" and "shared flush toilet connected to the sewerage system" as having access to sanitation.

1. Own flush toilet connected to the sewerage system
2. Shared flush toilet connected to the sewerage system
3. Flush latrine not connected to the sewerage system (connected to the river, chan
4. Pit latrine periodically cleaned or finally filled up and buried
5. Other

```{r}
#| warning: false
#| message: false
#| label: vulnerability-sanitation

vulnerable_sanitation <- poverty |> 
  select(UID, TypeOfToilet) |> 
  mutate(
    vulnerability_sanitation = if_else(
      TypeOfToilet < 3, 0, 1)) |> 
  select(-TypeOfToilet)

# We check the distribution

as.data.frame(table(vulnerable_sanitation$vulnerability_sanitation)) |> 
  gt()
```

## Building materials

When it comes to building materials of walls and floor, data show that the most precarious categories (mud walls, and bare ground floors) are not present in the country. We will still count concrete walls as not vulnerable and wood as vulnerable, but only relative to each other, not making any assumptions about the quality of wood structures in Georgia.

```{r}
#| warning: false
#| message: false
#| label: vulnerability-buildings

vulnerable_building <- poverty |> 
  select(UID, Walls) |> 
  mutate(
    vulnerability_building = if_else(
      Walls %in% c(1,3), 0, 1)) |> 
  select(-Walls)

# We check the distribution

as.data.frame(table(
  vulnerable_building$vulnerability_building)) |> 
  gt()
```

## Social protection

"The third dimension of inability to cope is access to public support. There is considerable evidence that cash transfers help households to manage shocks (...) [T]here is some evidence in favor of using information on current coverage, as support is more likely to be available in response to a disaster in places where pre-disaster coverage rates are high." [@doan2023] In the `poverty` dataset the variable `S_Q2b` shows those households that actually received social protection benefits.

```{r}
#| warning: false
#| message: false
#| label: vulnerability-ssp

vulnerable_ssp <- poverty |> 
  select(UID, S_Q2b) |> 
  mutate(
    vulnerability_ssp = if_else(
      coalesce(S_Q2b, 0) == 1, 0, 1)) |> 
  select(-S_Q2b)

# We check the distribution

as.data.frame(table(
  vulnerable_ssp$vulnerability_ssp)) |> 
  gt()
```

## Financial services

"The variable we use indicates whether a respondent has either a financial institution account or a mobile money account, given the strong relationship in the literature on access to mobile money and ability to use informal networks to manage the impact of large climate shocks." [@doan2023] The `poverty` dataset has information on amount saved by the household, which we will use as proxy for access to some financial security. We cannot assert that the money is being saved in a proper financial institution. However, we assume that having monthly level of savings of any kind can mitigate the impacts of climate change.

```{r}
#| warning: false
#| message: false
#| label: vulnerability-financial

vulnerable_financial <- poverty |> 
  select(UID, DazogvaAnCasesxeba) |> 
  mutate(
    vulnerability_financial = if_else(
      coalesce(DazogvaAnCasesxeba, 0) == 0, 1, 0)) |> 
  select(-DazogvaAnCasesxeba)

# We check the distribution

as.data.frame(table(
  vulnerable_financial$vulnerability_financial)) |> 
  gt()
```

## Join vulnerability datasets

```{r}
#| warning: false
#| message: false
#| label: vulnerability-join

# List of data frames to join
vulnerable_data <- list(
  vulnerable_education,
  vulnerable_water,
  vulnerable_electricity,
  vulnerable_sanitation,
  vulnerable_building,
  vulnerable_ssp,
  vulnerable_financial
)

# Start with the initial data frame
for (df in vulnerable_data) {
  hh_vulnerable <- hh_vulnerable |> left_join(df, join_by(UID))
}
```

# Exposure

Results are first presented for the number of people exposed to floods. Exposure numbers are presented for a range of return periods (from 5 to 100) and using different intensity thresholds to define extreme events: flood inundation of 15cm, 50cm and 150cm.

We first estimate the percentage of the population impacted by 1-in-100 year floods by region.

```{r}
#| warning: false
#| message: false
#| label: tbl-exposure-pct
#| tbl-cap: "Exposure to floods percentage"

exposure_pct <- floods |> 
  mutate(
    exposure_pct = exposure / total_pop,
    no_exposure_pct = 1 - exposure_pct
  ) |> 
  filter(
    scenario == "2020"
  ) |> 
  select(c(RegNo, regions, exposure_pct, no_exposure_pct)) |> 
  arrange(RegNo)

exposure_drought_landslide <- drought_landslide |> 
  filter(!is.na(RegNo)) |> 
  select(
    c(RegNo, region, pct_drought, pct_landslides)
  ) |> 
  arrange(RegNo)

exposure_pct |> 
  gt()
```


We then create subgroups based on adjustments to the weights column. 

```{r}
#| warning: false
#| message: false
#| label: exposure-dataset

exposed <- hh_vulnerable |> 
  filter(QuartNo == unique(QuartNo)[1]) |> 
  left_join(
    exposure_pct, 
    join_by(RegNo)) |> 
  left_join(
    exposure_drought_landslide,
    join_by(RegNo)
  ) |> 
  mutate(
    weights_exposure = weights_quar * exposure_pct,
    weights_drought = weights_quar * pct_drought,
    weights_landslides = weights_quar * pct_landslides,
    exposed_to_floods = 1,
    exposed_to_drought = 1,
    exposed_to_landslides = 1
  ) |> 
  mutate(
    exposed_to_floods = factor(
      exposed_to_floods,
      levels = c(1, 0),
      labels = c("Exposed", "Not exposed")
    ),
    exposed_to_drought = factor(
      exposed_to_drought,
      levels = c(1, 0),
      labels = c("Exposed", "Not exposed")
    ),
    exposed_to_landslides = factor(
      exposed_to_landslides,
      levels = c(1,0),
      labels = c("Exposed", "Not exposed")
    )
  )

not_exposed <- exposed |> 
  mutate(
    weights_exposure =   weights_quar * no_exposure_pct,
    weights_drought =    weights_quar * (1 - pct_drought),
    weights_landslides = weights_quar * (1 - pct_landslides),
    exposed_to_floods = 0,
    exposed_to_drought = 0,
    exposed_to_landslides = 0
  ) |> 
  mutate(
    exposed_to_floods = factor(
      exposed_to_floods,
      levels = c(1, 0),
      labels = c("Exposed", "Not exposed")
    ),
    exposed_to_drought = factor(
      exposed_to_drought,
      levels = c(1, 0),
      labels = c("Exposed", "Not exposed")
    ),
    exposed_to_landslides = factor(
      exposed_to_landslides,
      levels = c(1,0),
      labels = c("Exposed", "Not exposed")
    )
    )

vulnerable_data <- rbind(exposed, not_exposed)
```

# Results

## Exposure to extreme weather events and poverty

We first replicate the paper's graph regarding exposure at different return periods. Exposure numbers are presented for a range of return periods (from 5 to 100) at one intensity threshold: flood inundation of 15cm, 50cm and 150cm. Exposure falls with the event severity and increases with the return period.The figure shows that, given increasing return periods, exposure will increase more dramatically at a 100 year return period for Tbilisi (88,865 individuals), Imereti (53,027), Samergeolo and Zemo (upper) Svaneti (48,964), and Shida Kartli (36,314).

```{r}
#| warning: false
#| message: false
#| label: fig-floods-exposure
#| fig-cap: "Georgia: Flood exposure by return period and region"

floods_all_returns$regions <- factor(
  floods_all_returns$regions,
  levels = unique(floods_all_returns$regions)
)

floods_all_returns |> 
  filter(rt_period < 200) |> 
  ggplot(aes(
    x = rt_period, 
    y = exposure, 
    color = regions)) +
  geom_line(size = 1) +                      # Add lines for each region
  geom_point(size = 3) +                     # Add points for each region
  scale_color_manual(
    values = c(
      "yellow",    "darkblue", "orange", 
      "gold",      "green",    "purple", 
      "cyan",      "brown",    "pink", 
      "darkgreen", "navy",     "red"
  )) +                                       # Provide enough colors for all regions
  labs(
    title = "Flood exposure by return period",
    subtitle = "Regions of Georgia",
    x = "Return period (years)",
    y = "Population exposed (individuals)"
  ) +
  theme_minimal() +
  theme(
    legend.title = element_blank(),          # Remove legend title
    legend.position = "right"                # Position legend on the right
  )
```

### Extreme weather and poor by region

We now turn to the question of those who are exposed and poor. We use the official poverty line.

```{r}
#| warning: false
#| message: false
#| label: tbl-exposure-dataset
#| tbl-cap: "Number of people exposed to extreme weather and poor"

exposed_and_poor <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_exposure * hhsize
  ) |> 
  group_by(as_factor(RegNo), exposed_to_floods, conspoor) |> 
  summarize(
    individuals = sum(individuals, na.rm = TRUE)
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_floods, conspoor),
    values_from = individuals,
    names_expand = TRUE
  ) |> 
  mutate(
    total_population = rowSums(across(c(1:4)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = T),
    Pct_exposed_from_total = total_exposed / total_population * 100,
    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    total_exposed,
    `Exposed_Below PL`,
    starts_with("Pct")
  )

names(exposed_and_poor) <- c(
  "Regions",
  "Total Population",
  "Total Floods",
  "Exposed Below PL",
  "Pct. Floods from Total",
  "Pct. Below PL from Floods"
)

exposed_and_poor |> 
  ungroup() |> 
  gt() |> 
  fmt_number(
    columns = c(2:4),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  ) |> 
  fmt_number(
    columns = c(5:6),   # Apply formatting to percent columns
    decimals = 1                 # Set one decimal
  )

```

Drought and poor

```{r}
#| warning: false
#| message: false
#| label: tbl-drought-dataset
#| tbl-cap: "Number of people exposed to drought and poor"

drought_and_poor <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_drought * hhsize
  ) |> 
  group_by(as_factor(RegNo), exposed_to_drought, conspoor) |> 
  summarize(
    individuals = sum(individuals, na.rm = TRUE)
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_drought, conspoor),
    values_from = individuals,
    names_expand = TRUE
  ) |> 
  mutate(
    total_population = rowSums(across(c(1:4)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = T),
    Pct_exposed_from_total = total_exposed / total_population * 100,
    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    total_exposed,
    `Exposed_Below PL`,
    starts_with("Pct")
  )

names(drought_and_poor) <- c(
  "Regions",
  "Total Population",
  "Total Drought",
  "Drought Below PL",
  "Pct. Drought from Total",
  "Pct. Below PL from Drought"
)

drought_and_poor |> 
  ungroup() |> 
  gt() |> 
  fmt_number(
    columns = c(2:4),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  ) |> 
  fmt_number(
    columns = c(5:6),   # Apply formatting to percent columns
    decimals = 1                 # Set one decimal
  )

```

Landslides and poor

```{r}
#| warning: false
#| message: false
#| label: tbl-landslides-dataset
#| tbl-cap: "Number of people exposed to drought and poor"

landslides_and_poor <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_landslides * hhsize
  ) |> 
  group_by(as_factor(RegNo), exposed_to_landslides, conspoor) |> 
  summarize(
    individuals = sum(individuals, na.rm = TRUE)
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_landslides, conspoor),
    values_from = individuals,
    names_expand = TRUE
  ) |> 
  mutate(
    total_population = rowSums(across(c(1:4)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = T),
    Pct_exposed_from_total = total_exposed / total_population * 100,
    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    total_exposed,
    `Exposed_Below PL`,
    starts_with("Pct")
  )

names(landslides_and_poor) <- c(
  "Regions",
  "Total Population",
  "Total Landslides",
  "Landslides Below PL",
  "Pct. Landslides from Total",
  "Pct. Below PL from Landslides"
)

landslides_and_poor |> 
  ungroup() |> 
  gt() |> 
  fmt_number(
    columns = c(2:4),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  ) |> 
  fmt_number(
    columns = c(5:6),   # Apply formatting to percent columns
    decimals = 1                 # Set one decimal
  )

```

### Extreme weather and poor by consumption quintile

The paper replicates the table by country income level. Since our tables are at the country level, we could replicate these results by income (consumption) quintile, but as evident below it is a rather uninformative table, because those below poverty belong exclusively to the first quintile, leaving the remaining of the table unpopulated.

```{r}
#| warning: false
#| message: false
#| label: tbl-exposure-quintile
#| tbl-cap: "Number of people exposed to extreme weather and poor"

exposed_and_poor_q <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_exposure * hhsize
  ) |> 
  group_by(quintilc, exposed_to_floods, conspoor) |> 
  summarize(
    individuals = sum(coalesce(individuals,0), na.rm = TRUE)
  ) |> 
  pivot_wider(
    id_cols = c(quintilc),
    names_from = c(exposed_to_floods, conspoor),
    values_from = individuals,
    names_expand = TRUE,
    values_fill = 0
  ) |> 
  mutate(
    total_population = rowSums(across(c(1:4)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = T),
    Pct_exposed_from_total = total_exposed / total_population * 100,
    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100
  ) |> 
  select(
    quintilc,
    total_population,
    total_exposed,
    `Exposed_Below PL`,
    starts_with("Pct")
  ) |> 
  ungroup()

colnames(exposed_and_poor_q) <- c(
  "Quintiles",
  "Total Population",
  "Total Floods",
  "Exposed Below PL",
  "Pct. Floods from total",
  "Pct. Below PL from Floods"
)

exposed_and_poor_q |> 
  gt() |> 
  fmt_number(
    columns = c(2:4),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  ) |> 
  fmt_number(
    columns = c(5:6),   # Apply formatting to percent columns
    decimals = 1                 # Set one decimal
  )
```

Drought

```{r}
drought_and_poor_q <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_drought * hhsize
  ) |> 
  group_by(quintilc, exposed_to_drought, conspoor) |> 
  summarize(
    individuals = sum(coalesce(individuals,0), na.rm = TRUE)
  ) |> 
  pivot_wider(
    id_cols = c(quintilc),
    names_from = c(exposed_to_drought, conspoor),
    values_from = individuals,
    names_expand = TRUE,
    values_fill = 0
  ) |> 
  mutate(
    total_population = rowSums(across(c(1:4)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = T),
    Pct_exposed_from_total = total_exposed / total_population * 100,
    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100
  ) |> 
  select(
    quintilc,
    total_population,
    total_exposed,
    `Exposed_Below PL`,
    starts_with("Pct")
  ) |> 
  ungroup()

colnames(drought_and_poor_q) <- c(
  "Quintiles",
  "Total Population",
  "Total Drought",
  "Drought Below PL",
  "Pct. Drought from Total",
  "Pct. Below PL from Drought"
)

drought_and_poor_q |> 
  gt() |> 
  fmt_number(
    columns = c(2:4),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  ) |> 
  fmt_number(
    columns = c(5:6),   # Apply formatting to percent columns
    decimals = 1                 # Set one decimal
  )
```

Landslides

```{r}
landslides_and_poor_q <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_landslides * hhsize
  ) |> 
  group_by(quintilc, exposed_to_landslides, conspoor) |> 
  summarize(
    individuals = sum(coalesce(individuals,0), na.rm = TRUE)
  ) |> 
  pivot_wider(
    id_cols = c(quintilc),
    names_from = c(exposed_to_landslides, conspoor),
    values_from = individuals,
    names_expand = TRUE,
    values_fill = 0
  ) |> 
  mutate(
    total_population = rowSums(across(c(1:4)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = T),
    Pct_exposed_from_total = total_exposed / total_population * 100,
    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100
  ) |> 
  select(
    quintilc,
    total_population,
    total_exposed,
    `Exposed_Below PL`,
    starts_with("Pct")
  ) |> 
  ungroup()

colnames(drought_and_poor_q) <- c(
  "Quintiles",
  "Total Population",
  "Total Landslides",
  "Landslides Below PL",
  "Pct. Landslides from Total",
  "Pct. Below PL from Landslides"
)

drought_and_poor_q |> 
  gt() |> 
  fmt_number(
    columns = c(2:4),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  ) |> 
  fmt_number(
    columns = c(5:6),   # Apply formatting to percent columns
    decimals = 1                 # Set one decimal
  )
```


## At risk from extreme weather events

### Number of people exposed and vulnerable in each indicator

"For these same events and risk thresholds, we consider the share of households that are exposed and highly vulnerable. Being highly vulnerable is defined as failing to reach the threshold in or lacking access to one or more dimensions (e.g., lacking access to electricity or coverage by social protection or having an insufficient income)." [@doan2023]

Floods

```{r}
#| warning: false
#| message: false
#| label: tbl-at-risk-region
#| tbl-cap: "Number of people exposed and vulnerable by region"

at_risk_floods <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_exposure * hhsize,
    risk_income = individuals * vulnerability_income,
    risk_education = individuals * vulnerability_education,
    risk_water = individuals * vulnerability_water,
    # risk_electricity = individuals * vulnerability_electricity, # 100% in GEO
    risk_sanitation = individuals * vulnerability_sanitation,
    risk_building = individuals * vulnerability_building,
    risk_ssp = individuals * vulnerability_ssp,
    risk_financial = individuals * vulnerability_financial
  ) |> 
  group_by(as_factor(RegNo), exposed_to_floods) |> 
  summarize(
    Individuals = sum(individuals, na.rm = T),
    Income = sum(risk_income, na.rm = T),
    Education = sum(risk_education, na.rm = T),
    Water = sum(risk_water, na.rm = T),
    # Electricity = sum(risk_income, na.rm = T),
    Sanitation = sum(risk_sanitation, na.rm = T),
    Buildings = sum(risk_building, na.rm = T),
    SSP = sum(risk_ssp, na.rm = T),
    Financial = sum(risk_financial, na.rm = T)
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_floods),
    values_from = c(
      Individuals,
      Income,
      Education,
      Water,
      # Electricity,
      Sanitation,
      Buildings,
      SSP,
      Financial),
    names_expand = TRUE
  ) |> 
  mutate(
    total_population = rowSums(across(starts_with("Individuals_")), na.rm = TRUE),
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    ends_with("_Exposed")
  ) |> 
  ungroup()

names(at_risk_floods) <- c(
  "Regions",
  "Total Population",
  "Total Floods",
  "Income",
  "Education",
  "Water",
  "Sanitation",
  "Buildings",
  "Social Protection",
  "Financial inclusion"
)

at_risk_floods |> 
  ungroup() |> 
  gt() |> 
  fmt_number(
    columns = where(is.numeric),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  )

# write.table(at_risk, "clipboard", sep = "\t", row.names = F)
```

Drought

```{r}
at_risk_drought <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_drought * hhsize,
    risk_income = individuals * vulnerability_income,
    risk_education = individuals * vulnerability_education,
    risk_water = individuals * vulnerability_water,
    # risk_electricity = individuals * vulnerability_electricity, # 100% in GEO
    risk_sanitation = individuals * vulnerability_sanitation,
    risk_building = individuals * vulnerability_building,
    risk_ssp = individuals * vulnerability_ssp,
    risk_financial = individuals * vulnerability_financial
  ) |> 
  group_by(as_factor(RegNo), exposed_to_drought) |> 
  summarize(
    Individuals = sum(individuals, na.rm = T),
    Income = sum(risk_income, na.rm = T),
    Education = sum(risk_education, na.rm = T),
    Water = sum(risk_water, na.rm = T),
    # Electricity = sum(risk_income, na.rm = T),
    Sanitation = sum(risk_sanitation, na.rm = T),
    Buildings = sum(risk_building, na.rm = T),
    SSP = sum(risk_ssp, na.rm = T),
    Financial = sum(risk_financial, na.rm = T)
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_drought),
    values_from = c(
      Individuals,
      Income,
      Education,
      Water,
      # Electricity,
      Sanitation,
      Buildings,
      SSP,
      Financial),
    names_expand = TRUE
  ) |> 
  mutate(
    total_population = rowSums(across(starts_with("Individuals_")), na.rm = TRUE),
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    ends_with("_Exposed")
  ) |> 
  ungroup()

names(at_risk_drought) <- c(
  "Regions",
  "Total Population",
  "Total Drought",
  "Income",
  "Education",
  "Water",
  "Sanitation",
  "Buildings",
  "Social Protection",
  "Financial inclusion"
)

at_risk_drought |> 
  ungroup() |> 
  gt() |> 
  fmt_number(
    columns = where(is.numeric),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  )

```

Landslides

```{r}
at_risk_landslides <- vulnerable_data |>
  mutate(
    conspoor = if_else(
      aecons < pline, "Below PL", "Above PL"),
    individuals = weights_landslides * hhsize,
    risk_income = individuals * vulnerability_income,
    risk_education = individuals * vulnerability_education,
    risk_water = individuals * vulnerability_water,
    # risk_electricity = individuals * vulnerability_electricity, # 100% in GEO
    risk_sanitation = individuals * vulnerability_sanitation,
    risk_building = individuals * vulnerability_building,
    risk_ssp = individuals * vulnerability_ssp,
    risk_financial = individuals * vulnerability_financial
  ) |> 
  group_by(as_factor(RegNo), exposed_to_landslides) |> 
  summarize(
    Individuals = sum(individuals, na.rm = T),
    Income = sum(risk_income, na.rm = T),
    Education = sum(risk_education, na.rm = T),
    Water = sum(risk_water, na.rm = T),
    # Electricity = sum(risk_income, na.rm = T),
    Sanitation = sum(risk_sanitation, na.rm = T),
    Buildings = sum(risk_building, na.rm = T),
    SSP = sum(risk_ssp, na.rm = T),
    Financial = sum(risk_financial, na.rm = T)
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_landslides),
    values_from = c(
      Individuals,
      Income,
      Education,
      Water,
      # Electricity,
      Sanitation,
      Buildings,
      SSP,
      Financial),
    names_expand = TRUE
  ) |> 
  mutate(
    total_population = rowSums(across(starts_with("Individuals_")), na.rm = TRUE),
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    ends_with("_Exposed")
  ) |> 
  ungroup()

names(at_risk_landslides) <- c(
  "Regions",
  "Total Population",
  "Total Landslides",
  "Income",
  "Education",
  "Water",
  "Sanitation",
  "Buildings",
  "Social Protection",
  "Financial inclusion"
)

at_risk_landslides |> 
  ungroup() |> 
  gt() |> 
  fmt_number(
    columns = where(is.numeric),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  )
```


### Number of people highly vulnerable on multiple dimensions

```{r}
#| warning: false
#| message: false
#| label: tbl-at-risk-dimensions
#| tbl-cap: "Number of people highly vulnerable on multiple dimensions"

at_risk_dimensions_floods <- vulnerable_data |>
  mutate(
    individuals = weights_exposure * hhsize,
    number_of_dimensions = rowSums(across(starts_with("vulnerability_")))
    ) |> 
  group_by(
    as_factor(RegNo), 
    exposed_to_floods, 
    number_of_dimensions) |> 
  summarize(
    Individuals = sum(individuals, na.rm = T),
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_floods, number_of_dimensions),
    values_from = c(
      Individuals),
    names_expand = TRUE,
    values_fill = 0
  ) |> 
  mutate(
    total_population = rowSums(across(where(is.numeric)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = TRUE)
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    total_exposed,
    starts_with("Exposed_")
  ) |> 
  ungroup()

names(at_risk_dimensions_floods) <- c(
  "Regions",
  "Total Population",
  "Total Floods",
  "0 dimensions",
  "1 dimension",
  "2 dimensions",
  "3 dimensions",
  "4 dimensions",
  "5 dimensions",
  "6 dimensions"
)

at_risk_dimensions_floods |> 
  gt() |> 
  fmt_number(
    columns = where(is.numeric),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  )

# write.table(at_risk_dimensions, "clipboard", sep = "\t", row.names = F)
```

Drought

```{r}
at_risk_dimensions_drought <- vulnerable_data |>
  mutate(
    individuals = weights_drought * hhsize,
    number_of_dimensions = rowSums(across(starts_with("vulnerability_")))
    ) |> 
  group_by(
    as_factor(RegNo), 
    exposed_to_drought, 
    number_of_dimensions) |> 
  summarize(
    Individuals = sum(individuals, na.rm = T),
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_drought, number_of_dimensions),
    values_from = c(
      Individuals),
    names_expand = TRUE,
    values_fill = 0
  ) |> 
  mutate(
    total_population = rowSums(across(where(is.numeric)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = TRUE)
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    total_exposed,
    starts_with("Exposed_")
  ) |> 
  ungroup()

names(at_risk_dimensions_drought) <- c(
  "Regions",
  "Total Population",
  "Total Drought",
  "0 dimensions",
  "1 dimension",
  "2 dimensions",
  "3 dimensions",
  "4 dimensions",
  "5 dimensions",
  "6 dimensions"
)

at_risk_dimensions_drought |> 
  gt() |> 
  fmt_number(
    columns = where(is.numeric),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  )
```

Landslides

```{r}
at_risk_dimensions_landslides <- vulnerable_data |>
  mutate(
    individuals = weights_landslides * hhsize,
    number_of_dimensions = rowSums(across(starts_with("vulnerability_")))
    ) |> 
  group_by(
    as_factor(RegNo), 
    exposed_to_landslides, 
    number_of_dimensions) |> 
  summarize(
    Individuals = sum(individuals, na.rm = T),
  ) |> 
  pivot_wider(
    id_cols = c(`as_factor(RegNo)`),
    names_from = c(exposed_to_landslides, number_of_dimensions),
    values_from = c(
      Individuals),
    names_expand = TRUE,
    values_fill = 0
  ) |> 
  mutate(
    total_population = rowSums(across(where(is.numeric)), na.rm = TRUE),
    total_exposed = rowSums(across(starts_with("Exposed_")), na.rm = TRUE)
  ) |> 
  select(
    `as_factor(RegNo)`,
    total_population,
    total_exposed,
    starts_with("Exposed_")
  ) |> 
  ungroup()

names(at_risk_dimensions_landslides) <- c(
  "Regions",
  "Total Population",
  "Total Landslides",
  "0 dimensions",
  "1 dimension",
  "2 dimensions",
  "3 dimensions",
  "4 dimensions",
  "5 dimensions",
  "6 dimensions"
)

at_risk_dimensions_landslides |> 
  gt() |> 
  fmt_number(
    columns = where(is.numeric),   # Apply formatting to totals columns
    decimals = 0,                 # Set no decimals
    use_seps = TRUE               # Use thousands separator
  )
```


### Traditionally vulnerable groups

Floods

```{r}
#| warning: false
#| message: false
#| label: tbl-at-risk-vulnerable-groups
#| tbl-cap: "Number of people at risk from traditionally vulnerable groups"

traditionally_vulnerable <- vulnerable_data |>
  mutate(
    all_members = weights_exposure * hhsize,
    children = weights_exposure * Childern,
    youth = weights_exposure * Adult,
    women = weights_exposure * Working_age_Woman,
    men = weights_exposure * Working_age_man,
    elderly = weights_exposure *
      (Pensioner_age_man + Pensioner_age_Woman)
  ) |>
  select(
    UID,
    RegNo,
    type,
    # all_members,
    children,
    youth,
    women,
    elderly,
    men,
    vulnerability_income,
    vulnerability_education,
    vulnerability_water,
    vulnerability_sanitation,
    vulnerability_building,
    vulnerability_ssp,
    vulnerability_financial,
    exposed_to_floods
  ) |>
  pivot_longer(
    cols = starts_with("vulnerability_"),
    names_to = "vulnerability_type",
    names_prefix = "vulnerability_",
    values_to = "is_vulnerable"
  ) |>
  pivot_longer(
    cols = c(children, youth, women, elderly, men),
    names_to = "vulnerable_group",
    values_to = "no_vulnerable_people"
  ) |>
  filter(is_vulnerable == 1, exposed_to_floods == "Exposed") |>
  mutate(
    vulnerability_type = factor(
      vulnerability_type,
      levels = c(
        "income",
        "education",
        "water",
        "sanitation",
        "building",
        "ssp",
        "financial"
      )
    ),
    vulnerable_group = factor(
      vulnerable_group,
      levels = c(
        "children", "youth", 
        "women", "elderly", "men"),
      # labels(
      #   "Children", "Youth", 
      #   "Women", "Elderly", "Men"
      # )
    )
  )

traditionally_vulnerable_area <- traditionally_vulnerable |> 
  group_by(
    as_factor(type),
    vulnerability_type,
    vulnerable_group
  ) |> 
  summarize(
    value = sum(no_vulnerable_people, na.rm = T)
  ) |> 
  pivot_wider(
    id_cols = c(
      `as_factor(type)`,
      vulnerable_group
    ),
    names_from = vulnerability_type,
    values_from = value,
    names_expand = T,
    values_fill = 0
  ) 

colnames(traditionally_vulnerable_area) <- c(
  "Area", "Group", "Income",
  "Education", "Water", "Sanitation",
  "Building", "Social Protection", "Financial"
)

traditionally_vulnerable_area |> 
  # ungroup() |>
  gt() |> 
  summary_rows(
    groups = everything(),
    columns = c(
      "Income", "Education", 
      "Water", "Sanitation",
      "Building", "Social Protection", 
      "Financial"),
    fns = list(label = "Subtotal", id = "subtotals", fn = "sum")
  ) |> 
  grand_summary_rows(
    columns = c(
      "Income", "Education", 
      "Water", "Sanitation",
      "Building", "Social Protection", 
      "Financial"),
    fns = list(label = "Total", id = "totals", fn = "sum")
  )
  
# names(exposed_and_poor) <- c(
#   "Regions",
#   "Total Population",
#   "Total Exposed",
#   "Exposed Below PL",
#   "Pct. exposed from total",
#   "Pct. Below PL from exposed"
# )
# write.table((traditionally_vulnerable_rural), "clipboard", sep = "\t", row.names = F)
# writeClipboard(as_raw_html(traditionally_vulnerable_rural))
```

Drought

```{r}
traditionally_vulnerable_drought <- vulnerable_data |>
  mutate(
    all_members = weights_drought * hhsize,
    children = weights_drought * Childern,
    youth = weights_drought * Adult,
    women = weights_drought * Working_age_Woman,
    men = weights_drought * Working_age_man,
    elderly = weights_drought *
      (Pensioner_age_man + Pensioner_age_Woman)
  ) |>
  select(
    UID,
    RegNo,
    type,
    # all_members,
    children,
    youth,
    women,
    elderly,
    men,
    vulnerability_income,
    vulnerability_education,
    vulnerability_water,
    vulnerability_sanitation,
    vulnerability_building,
    vulnerability_ssp,
    vulnerability_financial,
    exposed_to_drought
  ) |>
  pivot_longer(
    cols = starts_with("vulnerability_"),
    names_to = "vulnerability_type",
    names_prefix = "vulnerability_",
    values_to = "is_vulnerable"
  ) |>
  pivot_longer(
    cols = c(children, youth, women, elderly, men),
    names_to = "vulnerable_group",
    values_to = "no_vulnerable_people"
  ) |>
  filter(is_vulnerable == 1, exposed_to_drought == "Exposed") |>
  mutate(
    vulnerability_type = factor(
      vulnerability_type,
      levels = c(
        "income",
        "education",
        "water",
        "sanitation",
        "building",
        "ssp",
        "financial"
      )
    ),
    vulnerable_group = factor(
      vulnerable_group,
      levels = c(
        "children", "youth", 
        "women", "elderly", "men"),
      # labels(
      #   "Children", "Youth", 
      #   "Women", "Elderly", "Men"
      # )
    )
  )

traditionally_vulnerable_area_drought <- traditionally_vulnerable_drought |> 
  group_by(
    as_factor(type),
    vulnerability_type,
    vulnerable_group
  ) |> 
  summarize(
    value = sum(no_vulnerable_people, na.rm = T)
  ) |> 
  pivot_wider(
    id_cols = c(
      `as_factor(type)`,
      vulnerable_group
    ),
    names_from = vulnerability_type,
    values_from = value,
    names_expand = T,
    values_fill = 0
  ) 

colnames(traditionally_vulnerable_area_drought) <- c(
  "Area", "Group", "Income",
  "Education", "Water", "Sanitation",
  "Building", "Social Protection", "Financial"
)

traditionally_vulnerable_area_drought |> 
  # ungroup() |>
  gt() |> 
  summary_rows(
    groups = everything(),
    columns = c(
      "Income", "Education", 
      "Water", "Sanitation",
      "Building", "Social Protection", 
      "Financial"),
    fns = list(label = "Subtotal", id = "subtotals", fn = "sum")
  ) |> 
  grand_summary_rows(
    columns = c(
      "Income", "Education", 
      "Water", "Sanitation",
      "Building", "Social Protection", 
      "Financial"),
    fns = list(label = "Total", id = "totals", fn = "sum")
  )
```

Landslides

```{r}
traditionally_vulnerable_landslides <- vulnerable_data |>
  mutate(
    all_members = weights_landslides * hhsize,
    children = weights_landslides * Childern,
    youth = weights_landslides * Adult,
    women = weights_landslides * Working_age_Woman,
    men = weights_landslides * Working_age_man,
    elderly = weights_landslides *
      (Pensioner_age_man + Pensioner_age_Woman)
  ) |>
  select(
    UID,
    RegNo,
    type,
    # all_members,
    children,
    youth,
    women,
    elderly,
    men,
    vulnerability_income,
    vulnerability_education,
    vulnerability_water,
    vulnerability_sanitation,
    vulnerability_building,
    vulnerability_ssp,
    vulnerability_financial,
    exposed_to_landslides
  ) |>
  pivot_longer(
    cols = starts_with("vulnerability_"),
    names_to = "vulnerability_type",
    names_prefix = "vulnerability_",
    values_to = "is_vulnerable"
  ) |>
  pivot_longer(
    cols = c(children, youth, women, elderly, men),
    names_to = "vulnerable_group",
    values_to = "no_vulnerable_people"
  ) |>
  filter(is_vulnerable == 1, exposed_to_landslides == "Exposed") |>
  mutate(
    vulnerability_type = factor(
      vulnerability_type,
      levels = c(
        "income",
        "education",
        "water",
        "sanitation",
        "building",
        "ssp",
        "financial"
      )
    ),
    vulnerable_group = factor(
      vulnerable_group,
      levels = c(
        "children", "youth", 
        "women", "elderly", "men"),
      # labels(
      #   "Children", "Youth", 
      #   "Women", "Elderly", "Men"
      # )
    )
  )

traditionally_vulnerable_area_landslides <- traditionally_vulnerable_landslides |> 
  group_by(
    as_factor(type),
    vulnerability_type,
    vulnerable_group
  ) |> 
  summarize(
    value = sum(no_vulnerable_people, na.rm = T)
  ) |> 
  pivot_wider(
    id_cols = c(
      `as_factor(type)`,
      vulnerable_group
    ),
    names_from = vulnerability_type,
    values_from = value,
    names_expand = T,
    values_fill = 0
  ) 

colnames(traditionally_vulnerable_area_landslides) <- c(
  "Area", "Group", "Income",
  "Education", "Water", "Sanitation",
  "Building", "Social Protection", "Financial"
)

traditionally_vulnerable_area_landslides |> 
  # ungroup() |>
  gt() |> 
  summary_rows(
    groups = everything(),
    columns = c(
      "Income", "Education", 
      "Water", "Sanitation",
      "Building", "Social Protection", 
      "Financial"),
    fns = list(label = "Subtotal", id = "subtotals", fn = "sum")
  ) |> 
  grand_summary_rows(
    columns = c(
      "Income", "Education", 
      "Water", "Sanitation",
      "Building", "Social Protection", 
      "Financial"),
    fns = list(label = "Total", id = "totals", fn = "sum"))
```

# Maps Floods

```{r}
exposed_and_poor_map <- adm1 |> 
  left_join(
    exposed_and_poor,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    pct_exposed_label = if_else(
      is.na(`Pct. Floods from Total`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", `Pct. Floods from Total`)
      ) 
    ),
    pct_exposed_poor_label = if_else(
      is.na(`Pct. Below PL from Floods`), 
      "Unavailable",
      paste(
        region,
        sprintf("\n%.1f%%", `Pct. Below PL from Floods`)
      )
    )
  )
```

## Exposed

```{r}
#| warning: false
#| message: false
#| label: fig-exposed-total
#| fig-cap: "Percent exposed from total"

map_object <-
tm_shape(exposed_and_poor_map)+
  tm_polygons("Pct. Floods from Total",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 5,
              breaks = c(0, 5, 10, 15, 20, 25, 30),
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_exposed_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent Floods from Total",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_exposed_fm_total.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_exposed_fm_total.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## Exposed and poor

```{r}
#| warning: false
#| message: false
#| label: fig-exposed-and-poor
#| fig-cap: "Percent below poverty line from those exposed"

map_object <-
tm_shape(exposed_and_poor_map)+
  tm_polygons("Pct. Below PL from Floods",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 5,
              breaks = c(0, 5, 10, 15, 20, 25, 30),
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_exposed_poor_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent below poverty line\nfrom those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_poor_fm_exposed.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_poor_fm_exposed.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## At risk by dimension

```{r}
at_risk_map_floods <- adm1 |> 
  left_join(
    at_risk_floods,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    pct_income = Income / `Total Floods` * 100,
    pct_education = Education  / `Total Floods` * 100,
    pct_water = Water / `Total Floods` * 100,
    pct_sanitation = Sanitation  / `Total Floods` * 100,
    pct_buildings = Buildings / `Total Floods` * 100,
    pct_ssp = `Social Protection` / `Total Floods` * 100,
    pct_financial = `Financial inclusion` / `Total Floods` * 100,
    pct_income_label = if_else(
      is.na(Income), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_income)
      ) 
    ),
    pct_education_label = if_else(
      is.na(Education), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_education)
      ) 
    ),
    pct_water_label = if_else(
      is.na(Water), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_water)
      ) 
    ),
    pct_sanitation_label = if_else(
      is.na(Sanitation), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_sanitation)
      ) 
    ),
    pct_buildings_label = if_else(
      is.na(Buildings), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_buildings)
      ) 
    ),
    pct_ssp_label = if_else(
      is.na(`Social Protection`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_ssp)
      ) 
    ),
    pct_financial_label = if_else(
      is.na(`Financial inclusion`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_financial)
      ) 
    )
  )
```

### Income

```{r}
#| warning: false
#| message: false
#| label: fig-income
#| fig-cap: "Percent with income dimension from those exposed"

map_object <-
tm_shape(at_risk_map_floods)+
  tm_polygons("pct_income",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_income_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent income dimension\nfrom those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_income.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_income.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```


### Education

```{r}
#| warning: false
#| message: false
#| label: fig-education
#| fig-cap: "Percent with education dimension from those exposed"

map_object <-
tm_shape(at_risk_map_floods)+
  tm_polygons("pct_education",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_education_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent education dimension\nfrom those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_education.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_education.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Water

```{r}
#| warning: false
#| message: false
#| label: fig-water
#| fig-cap: "Percent with water dimension from those exposed to floods"

map_object <-
tm_shape(at_risk_map_floods)+
  tm_polygons("pct_water",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_water_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent water dimension\nfrom those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_water.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_water.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Sanitation

```{r}
#| warning: false
#| message: false
#| label: fig-sanitation
#| fig-cap: "Percent with sanitation dimension from those exposed"

map_object <-
tm_shape(at_risk_map_floods)+
  tm_polygons("pct_sanitation",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 20,
              breaks = c(0, 20, 40, 60, 80, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_sanitation_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent sanitation dimension\nfrom those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_sanitation.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_sanitation.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Building materials

```{r}
#| warning: false
#| message: false
#| label: fig-buildings
#| fig-cap: "Percent with buildings dimension from those exposed"

map_object <-
tm_shape(at_risk_map_floods)+
  tm_polygons("pct_buildings",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_buildings_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent building materials\ndimension from those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_buildings.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_buildings.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Social protection

```{r}
#| warning: false
#| message: false
#| label: fig-ssp
#| fig-cap: "Percent with social dimension from those exposed"

map_object <-
tm_shape(at_risk_map_floods)+
  tm_polygons("pct_ssp",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(50,60, 70,80, 90, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_ssp_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent social protection\ndimension from those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_ssp.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_ssp.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Financial services

```{r}
#| warning: false
#| message: false
#| label: fig-financial
#| fig-cap: "Percent with financial dimension from those exposed"

map_object <-
tm_shape(at_risk_map_floods)+
  tm_polygons("pct_financial",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(40, 50,60, 70,80, 90, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_financial_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent financial dimension\nfrom those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_financial.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_financial.png",
  width = 8,
  height = 5,
  units = "in"
)
map_object
```

## At risk by many dimensions

Prepare map data

```{r}
at_risk_dimensions_map_floods <- adm1 |> 
  left_join(
    at_risk_dimensions_floods,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    up_to_2_dims = case_when(
      is.na(`1 dimension`) | is.na(`2 dimensions`) ~ NA,
      .default = `1 dimension` + `2 dimensions`
    ),
    pct_up_to_2_dims = if_else(
      is.na(`Total Floods`), `Total Floods`,
      up_to_2_dims / `Total Floods` * 100
    )
  ) |> 
  mutate(
    pct_up_to_2_dims_label = if_else(
      is.na(pct_up_to_2_dims), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_up_to_2_dims)
      ) 
    )
  )
```

```{r}
#| warning: false
#| message: false
#| label: fig-up-to-2-dimensions
#| fig-cap: "Percent with up to 2 dimensions from those exposed"

map_object <-
tm_shape(at_risk_dimensions_map_floods)+
  tm_polygons("pct_up_to_2_dims",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(20,40, 50,60, 70,80, 90,100),
              palette = "Purples",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_up_to_2_dims_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent with up to 2 dimensions\nfrom those exposed to floods",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_up_to_2_dimensions.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/flood/pct_flood_up_to_2_dimensions.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```



# Maps Drought

```{r}
drought_and_poor_map <- adm1 |> 
  left_join(
    drought_and_poor,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    pct_exposed_label = if_else(
      is.na(`Pct. Drought from Total`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", `Pct. Drought from Total`)
      ) 
    ),
    pct_exposed_poor_label = if_else(
      is.na(`Pct. Below PL from Drought`), 
      "Unavailable",
      paste(
        region,
        sprintf("\n%.1f%%", `Pct. Below PL from Drought`)
      )
    )
  )
```

## Exposed

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(drought_and_poor_map)+
  tm_polygons("Pct. Drought from Total",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 5,
              breaks = c(0, 10, 20, 30, 40, 50),
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_exposed_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent Drought from Total",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_exposed_fm_total.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_exposed_fm_total.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## Exposed and poor

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(drought_and_poor_map)+
  tm_polygons("Pct. Below PL from Drought",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 5,
              breaks = c(0, 5, 10, 15, 20, 25, 30),
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_exposed_poor_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent below poverty line\nfrom those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_poor_fm_exposed.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_poor_fm_exposed.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## At risk by dimension

```{r}
at_risk_map_drought <- adm1 |> 
  left_join(
    at_risk_drought,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    pct_income = Income / `Total Drought` * 100,
    pct_education = Education  / `Total Drought` * 100,
    pct_water = Water / `Total Drought` * 100,
    pct_sanitation = Sanitation  / `Total Drought` * 100,
    pct_buildings = Buildings / `Total Drought` * 100,
    pct_ssp = `Social Protection` / `Total Drought` * 100,
    pct_financial = `Financial inclusion` / `Total Drought` * 100,
    pct_income_label = if_else(
      is.na(Income), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_income)
      ) 
    ),
    pct_education_label = if_else(
      is.na(Education), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_education)
      ) 
    ),
    pct_water_label = if_else(
      is.na(Water), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_water)
      ) 
    ),
    pct_sanitation_label = if_else(
      is.na(Sanitation), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_sanitation)
      ) 
    ),
    pct_buildings_label = if_else(
      is.na(Buildings), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_buildings)
      ) 
    ),
    pct_ssp_label = if_else(
      is.na(`Social Protection`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_ssp)
      ) 
    ),
    pct_financial_label = if_else(
      is.na(`Financial inclusion`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_financial)
      ) 
    )
  )
```

### Income

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_drought)+
  tm_polygons("pct_income",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_income_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent income dimension\nfrom those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_income.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_income.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```


### Education

```{r}
#| warning: false
#| message: false


map_object <-
tm_shape(at_risk_map_drought)+
  tm_polygons("pct_education",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_education_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent education dimension\nfrom those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_education.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_education.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Water

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_drought)+
  tm_polygons("pct_water",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_water_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent water dimension\nfrom those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_water.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_water.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Sanitation

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_drought)+
  tm_polygons("pct_sanitation",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 20,
              breaks = c(0, 20, 40, 60, 80, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_sanitation_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent sanitation dimension\nfrom those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_sanitation.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_sanitation.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Building materials

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_drought)+
  tm_polygons("pct_buildings",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_buildings_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent building materials\ndimension from those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_buildings.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_buildings.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Social protection

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_drought)+
  tm_polygons("pct_ssp",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(50,60, 70,80, 90, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_ssp_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent social protection\ndimension from those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_ssp.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_ssp.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Financial services

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_drought)+
  tm_polygons("pct_financial",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(40, 50,60, 70,80, 90, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_financial_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent financial dimension\nfrom those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_financial.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_financial.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## At risk by many dimensions

Prepare map data

```{r}
at_risk_dimensions_map_drought <- adm1 |> 
  left_join(
    at_risk_dimensions_drought,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    up_to_2_dims = case_when(
      is.na(`1 dimension`) | is.na(`2 dimensions`) ~ NA,
      .default = `1 dimension` + `2 dimensions`
    ),
    pct_up_to_2_dims = if_else(
      is.na(`Total Drought`), `Total Drought`,
      up_to_2_dims / `Total Drought` * 100
    )
  ) |> 
  mutate(
    pct_up_to_2_dims_label = if_else(
      is.na(pct_up_to_2_dims), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_up_to_2_dims)
      ) 
    )
  )
```

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_dimensions_map_drought)+
  tm_polygons("pct_up_to_2_dims",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(20,40, 50,60, 70,80, 90,100),
              palette = "Purples",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_up_to_2_dims_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent with up to 2 dimensions\nfrom those exposed to drought",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_up_to_2_dimensions.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/drought/pct_drought_up_to_2_dimensions.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```


# Maps Landslides

```{r}
landslides_and_poor_map <- adm1 |> 
  left_join(
    landslides_and_poor,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    pct_exposed_label = if_else(
      is.na(`Pct. Landslides from Total`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", `Pct. Landslides from Total`)
      ) 
    ),
    pct_exposed_poor_label = if_else(
      is.na(`Pct. Below PL from Landslides`), 
      "Unavailable",
      paste(
        region,
        sprintf("\n%.1f%%", `Pct. Below PL from Landslides`)
      )
    )
  )
```

## Exposed

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(landslides_and_poor_map)+
  tm_polygons("Pct. Landslides from Total",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 5,
              breaks = c(0, 10, 20, 30, 40, 50),
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_exposed_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent Landslides from Total",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_exposed_fm_total.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_exposed_fm_total.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## Exposed and poor

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(landslides_and_poor_map)+
  tm_polygons("Pct. Below PL from Landslides",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 5,
              breaks = c(0, 5, 10, 15, 20, 25, 30),
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_exposed_poor_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent below poverty line\nfrom those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_poor_fm_exposed.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_poor_fm_exposed.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## At risk by dimension

```{r}
at_risk_map_landslides <- adm1 |> 
  left_join(
    at_risk_landslides,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    pct_income = Income / `Total Landslides` * 100,
    pct_education = Education  / `Total Landslides` * 100,
    pct_water = Water / `Total Landslides` * 100,
    pct_sanitation = Sanitation  / `Total Landslides` * 100,
    pct_buildings = Buildings / `Total Landslides` * 100,
    pct_ssp = `Social Protection` / `Total Landslides` * 100,
    pct_financial = `Financial inclusion` / `Total Landslides` * 100,
    pct_income_label = if_else(
      is.na(Income), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_income)
      ) 
    ),
    pct_education_label = if_else(
      is.na(Education), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_education)
      ) 
    ),
    pct_water_label = if_else(
      is.na(Water), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_water)
      ) 
    ),
    pct_sanitation_label = if_else(
      is.na(Sanitation), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_sanitation)
      ) 
    ),
    pct_buildings_label = if_else(
      is.na(Buildings), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_buildings)
      ) 
    ),
    pct_ssp_label = if_else(
      is.na(`Social Protection`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_ssp)
      ) 
    ),
    pct_financial_label = if_else(
      is.na(`Financial inclusion`), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_financial)
      ) 
    )
  )
```

### Income

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_landslides)+
  tm_polygons("pct_income",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_income_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent income dimension\nfrom those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_income.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_income.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```


### Education

```{r}
#| warning: false
#| message: false


map_object <-
tm_shape(at_risk_map_landslides)+
  tm_polygons("pct_education",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_education_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent education dimension\nfrom those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_education.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_education.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Water

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_landslides)+
  tm_polygons("pct_water",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_water_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent water dimension\nfrom those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_water.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_water.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Sanitation

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_landslides)+
  tm_polygons("pct_sanitation",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 20,
              breaks = c(0, 20, 40, 60, 80, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_sanitation_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent sanitation dimension\nfrom those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_sanitation.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_sanitation.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Building materials

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_landslides)+
  tm_polygons("pct_buildings",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(0, 10, 20, 30, 40, 50, 60),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_buildings_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent building materials\ndimension from those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_buildings.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_buildings.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Social protection

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_landslides)+
  tm_polygons("pct_ssp",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(50,60, 70,80, 90, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_ssp_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent social protection\ndimension from those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_ssp.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_ssp.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

### Financial services

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_map_landslides)+
  tm_polygons("pct_financial",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(40, 50,60, 70,80, 90, 100),
              palette = "Blues",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_financial_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent financial dimension\nfrom those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_financial.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_financial.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```

## At risk by many dimensions

Prepare map data

```{r}
at_risk_dimensions_map_landslides <- adm1 |> 
  left_join(
    at_risk_dimensions_landslides,
    join_by(region == Regions)
  ) |> 
  mutate(
    region = case_when(
      region == "Racha-Lechkhumi and Kvemo Svaneti" ~
      "Racha-Lechkhumi\nand Kvemo Svaneti",
      region == "Samegrelo-Zemo Svaneti" ~
      "Samegrelo-\nZemo\nSvaneti",
      region == "Mtskheta-Mtianeti" ~
      "Mtskheta-\nMtianeti",
      region == "Samtskhe-Javakheti" ~
      "Samtskhe-\nJavakheti",
      .default = region
    ),
    up_to_2_dims = case_when(
      is.na(`1 dimension`) | is.na(`2 dimensions`) ~ NA,
      .default = `1 dimension` + `2 dimensions`
    ),
    pct_up_to_2_dims = if_else(
      is.na(`Total Landslides`), `Total Landslides`,
      up_to_2_dims / `Total Landslides` * 100
    )
  ) |> 
  mutate(
    pct_up_to_2_dims_label = if_else(
      is.na(pct_up_to_2_dims), 
      "Unavailable", 
      paste(
        region,
        sprintf("\n%.1f%%", pct_up_to_2_dims)
      ) 
    )
  )
```

```{r}
#| warning: false
#| message: false

map_object <-
tm_shape(at_risk_dimensions_map_landslides)+
  tm_polygons("pct_up_to_2_dims",
              title="Percent", 
              legend.show = TRUE,
              style = "fixed",
              scale = 10,
              breaks = c(20,40, 50,60, 70,80, 90,100),
              palette = "Purples",
              textNA = "Unavailable",
              colorNA = "grey"
              ) +
  tm_text(c("pct_up_to_2_dims_label"), size = .7, col = "black")+
  tm_layout(
    #legend.outside = TRUE,
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Percent with up to 2 dimensions\nfrom those exposed to landslides",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9)

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_up_to_2_dimensions.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/landslides/pct_landslides_up_to_2_dimensions.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```




## Spatially distributed population

```{r}
#| warning: false
#| message: false

pop <- raster::raster("data/gis/grided_population_2020.tif")

map_object <-
tm_shape(pop) +
  tm_raster("grided_population_2020", 
            style = "fixed", 
            breaks = c(0, 100, 150, 200, 600, 800, 1000, 10000),
            # palette = "YlOrRd",
            palette = "BuPu",
            title = "People per pixel") +
  tm_shape(adm1) +
  tm_borders() +
  tm_layout(
    legend.position = c("right", "top"),
    #title.snap.to.legend = FALSE,
    title = 
      "Spatially distributed population layer",
    frame = FALSE,
#            outer.margins=c(.10,.10, .10, .10), 
            title.position = c('left', 'bottom'),
            title.size = 0.9
    )

tmap_save(
  map_object,
  "data/outputs/vulnerability_img/other/gridded_pop_2020.svg",
  width = 8,
  height = 5,
  units = "in"
)
tmap_save(
  map_object,
  "data/outputs/vulnerability_img/other/gridded_pop_2020.png",
  width = 8,
  height = 5,
  units = "in",
  dpi = 300
)
map_object
```


# Exports to Excel

```{r}
#| warning: false
#| message: false
#| label: save-to-excel

# Define the file path
file_path <- "data/outputs/vulnerability_v2.xlsx"

# Check if the file exists
if (file.exists(file_path)) {
  # If the file exists, load the workbook
  wb <- loadWorkbook(file_path)
} else {
  # If the file doesn't exist, create a new workbook
  wb <- createWorkbook()
}

# Print the sheet names in the workbook
sheet_names <- names(wb)
print(sheet_names)

objects_to_add <- c(
  "exposed_and_poor",
  "at_risk_floods",
  "at_risk_dimensions_floods",
  "exposure_pct",
  "traditionally_vulnerable_area",
  "drought_and_poor",
  "at_risk_drought",
  "at_risk_dimensions_drought",
  "exposure_drought_landslide",
  "traditionally_vulnerable_area_drought",
  "landslides_and_poor",
  "at_risk_landslides",
  "at_risk_dimensions_landslides",
  "traditionally_vulnerable_area_landslides"
)

sheets_to_add <- c(
  "Exposed and Poor Floods", 
  "Exposed and Vulnerable Floods", 
  "At Risk on Dimensions Floods",
  "exposure_pct Floods",
  "Traditionally Vulnerable Floods",
  
  "Exposed and Poor Drought", 
  "Exposed and Vulnerable Drought", 
  "At Risk on Dimensions Drought",
  "exp_pct Drought and Landslides",
  "Trad Vulnerable Drought",
  
  "Exposed and Poor Landslides", 
  "Exp and Vulnerable Landslides", 
  "At Risk on Dims Landslides",
  "Trad Vulnerable Landslides"
  )

for (sheet in sheets_to_add) {
  # Add content to the workbook
  if (! sheet %in% names(wb)) {
  # Add a new sheet
  addWorksheet(wb, sheet)}
}

for (i in seq_along(objects_to_add)){
  writeData(
  wb,
  sheets_to_add[i], 
  get(objects_to_add[i]), 
  startRow = 5, 
  startCol = 1, 
  rowNames = FALSE)
}

saveWorkbook(
  wb,
  "data/outputs/vulnerability_v2.xlsx",
  overwrite = T)
```


# END

```{r}

```

