[
  {
    "objectID": "supporting-materials/vulnerability.html",
    "href": "supporting-materials/vulnerability.html",
    "title": "Vulnerability Analysis",
    "section": "",
    "text": "In analysis, we estimate number of people under vulnerable circumstances.\n“The vulnerability of a household to an extreme weather event will depend on the characteristics of the household that determine the event’s initial impact and the ability of a household to cope with that event (…). This is reflected in the IPCC definition, vulnerability includes both ‘the sensitivity or susceptibility to harm’ and ‘the lack of capacity to cope and adapt’” (Doan et al. 2023).",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#datasets",
    "href": "supporting-materials/vulnerability.html#datasets",
    "title": "Vulnerability Analysis",
    "section": "Datasets",
    "text": "Datasets\nWe use data from the 2023 survey for the Labor Split and data from the 2022 survey for the household expenditure and capital shares in In mil. GEL per year per household type.\n\n #| lst-label: original-datasets\n\n# Household Unique ID, Weights, Location and other basic variables\nhh_basics &lt;- read_sav(\n  \"data/ilcs_2023/sysschedule.sav\") |&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Household size (includes no. of family members)\nhh_size &lt;- read_sav(\n  \"data/ilcs_2023/familysize.sav\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Processed income at household level\nhh_income &lt;- read_sav(\n  \"data/ilcs_2023/tblincomes.sav\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Consumption aggregate at household level \nhh_expenditure &lt;- read_sav(\n  \"data/ilcs_2023/tblexpenditures.sav\")|&gt; \n  rename(# rename total expenditure variables\n         total_expenditure = MTlianixarjebi_,\n         total_expenditure_aeq06 = MTlianimoxmareba_EqAdScale,\n         total_expenditure_aeq08 = Mtlianimoxmareba_EqAdScale_08) |&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Characteristics of the dwelling\nhh_chars &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda01.sav\")|&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Persons (pp)\npp &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda02.sav\") |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo))\n\n# Labor (pp)\npp_labor &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda05_1.sav\") |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo),\n    Q5  = as.integer(Q5),\n    Q12 = as.integer(Q12)) \n\n# Poverty\npoverty &lt;- read_dta(\n  \"data/ilcs_2023/POVERTY_stata.dta\") |&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Ind. Poverty\nind_poverty &lt;- read_dta(\n  \"data/ilcs_2023/IND_POVERTY_stata.dta\") |&gt; \n  rename(MemberNo = memberno) |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo))\n\n# Exposure\nfloods &lt;- read.csv(\n  \"data/exposure/floods/df_exposure_100.csv\"\n)\n\nfloods_all_returns &lt;- read.csv(\n  \"data/exposure/floods/exposure_allrt_v3.0.csv\")\n\n# Maps\nadm1 &lt;- sf::read_sf(\"data/gis/geo-adm1.shp\") |&gt; \n  dplyr::select(RegNo, region, ADM1_PCODE, ADM1_EN, ADM1_KA, geometry) |&gt; \n  dplyr::arrange(ADM1_PCODE)",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#look-up-tables",
    "href": "supporting-materials/vulnerability.html#look-up-tables",
    "title": "Vulnerability Analysis",
    "section": "Look-up tables",
    "text": "Look-up tables\n\nsam_activities &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"SAM-REV2\",\n    col_names = T,\n    col_types = \"text\",\n  )\n\nsam_factors &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"SAM factors\",\n    col_names = T,\n    col_types = \"text\",\n  )\n\ncoicop &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"COICOP\",\n    col_names = T,\n    col_types = \"text\",\n  ) |&gt; \n  mutate(simple_code = as.integer(gsub(\"\\\\.\", \"\", Coicop)))\n\ncoicop_filtered &lt;- coicop |&gt; \n  filter( nchar(as.character(simple_code)) &gt;= 5)",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#income",
    "href": "supporting-materials/vulnerability.html#income",
    "title": "Vulnerability Analysis",
    "section": "Income",
    "text": "Income\nFollowing the methodology (Doan et al. 2023) this identifies the share of households that have income or consumption less than 1.5 times the poverty line. In the guidance paper, they use $2.15 (2017 PPP), but in our case, we use the official poverty line of Georgia for the year 2023 of 212.81 GEL per cápita (adult equivalent) per month. To be consistent with country assessments, we use consumption and not income, but to be consistent with the methodology paper, we continue to call this variable income.\n\n# Poverty line\npoverty_line &lt;- poverty$pline[1]\nincome_threshold &lt;- poverty_line * 1.5\n\nhh_vulnerable &lt;- poverty |&gt; \n  select(\n    QuartNo,\n    UID,\n    DiaryID,\n    RegNo,\n    type,\n    weights_quar, # Sampling weights of the HH\n    weights,      # HH weights\n    hhsize,       # Number of HH members\n    Childern,     # (note typo) Children\n    Adult,        # Adolescents 8-15\n    Working_age_man,\n    Working_age_Woman,\n    Pensioner_age_man,\n    Pensioner_age_Woman,\n    aecons,\n    aeinc,\n    pline,\n    quintilc,\n    decilc) |&gt; \n  mutate(\n    vulnerability_income = if_else(\n      aecons &lt; income_threshold, 1, 0))",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#education",
    "href": "supporting-materials/vulnerability.html#education",
    "title": "Vulnerability Analysis",
    "section": "Education",
    "text": "Education\nEducation to switch livelihoods or to access information and resources is proxied by a variable reflecting whether the household has an adult that has completed primary education. The GMD is used because this allows us to have information on education and income for the same household which allows us to know whether an individual is deprived on one or both dimensions (Doan et al. 2023). The poverty dataset already has the education level of the head of household. However, this calls for any member having at least primary education, which makes sense, because literate family members often bridge the understanding gap for illiterate ones, regardless of head of family status.\n\nvulnerable_education &lt;- pp |&gt;\n  select(UID, Education) |&gt; \n  mutate(\n    educated_member = case_when(\n      Education &lt; 4 ~ 0, # \"4. Primary education\"\n      Education &gt;= 4 ~ 1,\n      TRUE ~ 0 )) |&gt; \n  group_by(UID) |&gt; \n  summarize(\n    educated_members = sum(educated_member, na.rm = T),\n    vulnerability_education = if_else(\n      educated_members == 0, 1, 0\n    )\n  )\n\neduc_vulnerable_hh_unweighted &lt;- sum(\n  vulnerable_education$vulnerability_education)\n\nIn the entire dataset 15 households (unweighted) meet the education vulnerability criteria. Among the survey households, up to 9 members could be educated with the following distribution. This is a positive metric for Georgia.\n\neducated_data &lt;- as.data.frame(\n  table(vulnerable_education$educated_members))\ncolnames(educated_data) &lt;- c(\"educated_members\", \"count\")\n\n# Convert educated_members to numeric\neducated_data$educated_members &lt;- as.numeric(\n  as.character(educated_data$educated_members))\n\n# The graph\nggplot(educated_data, aes(x = educated_members, y = count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\", color = \"black\") +\n  geom_text(aes(label = count), vjust = -0.5, size = 4) +  # Add labels above bars\n  scale_x_continuous(breaks = educated_data$educated_members) +  # Set discrete ticks\n  labs(\n    title = \"Distribution of Educated Members\",\n    x = \"Number of Educated Members\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\nvulnerable_education &lt;- vulnerable_education |&gt; \n  select(-educated_members)\n\n\n\n\n\n\n\nFigure 1: Households for each number of educated members",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#access-to-water",
    "href": "supporting-materials/vulnerability.html#access-to-water",
    "title": "Vulnerability Analysis",
    "section": "Access to water",
    "text": "Access to water\n“When shocks hit, access to these services is an important determinant of the impact of the shock on welfare. For example, with access to improved drinking water, contaminated water from flooding and storms, or lack of water due to drought has less of an impact. Nevertheless, it is essential to acknowledge that the current indicator of access to improved drinking water, often represented by covered wells in low-income countries, may not sufficiently reflect susceptibility to contamination during extreme events such as floods or droughts. Therefore, there is a need for future work to refine this indicator by considering a potentially higher threshold. Metrics such as “improved piped water” can offer a more precise assessment of the infrastructure safeguarding against water-related risks in the event of shocks.” (Doan et al. 2023)\nWe take note of this caveat and choose the threshold water supply system installed in the dwelling and water system tap in the yard or vicinity as counting towards this dimension from the possible options below:\n\nThe water supply system installed in the dwelling\nThe water system tap in the yard or vicinity\nThe well in the yard or vicinity\nNatural spring in the yard or vicinity\nRiver, lake, spring, channel\nBought water\nOther\n\n\nvulnerable_water &lt;- poverty |&gt; \n  select(UID, WaterSource) |&gt; \n  mutate(\n    vulnerability_water = if_else(\n      WaterSource &lt; 3, 0, 1)) |&gt; \n  select(-WaterSource)\n\n# We check the distribution\n\nas.data.frame(table(vulnerable_water$vulnerability_water)) |&gt; \n  gt()\n\n\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n0\n10709\n\n\n1\n2499",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#access-to-electricity",
    "href": "supporting-materials/vulnerability.html#access-to-electricity",
    "title": "Vulnerability Analysis",
    "section": "Access to electricity",
    "text": "Access to electricity\n“With access to electricity, households are more likely to have assets such as fans that can help with heatwaves. A fuller discussion is available in the World Bank’s Lifelines report (Hallegatte et al, 2019). Whilst not a final selection of assets and infrastructure that matter for determining the initial loss of the shock, these measures provide a good first estimate to stimulate discussion.” (Doan et al. 2023) Variable q11_3 from the poverty dataset is a dummy that determines whether the household has access to electricity.\n\nvulnerable_electricity &lt;- poverty |&gt; \n  select(UID, q11_3) |&gt; \n  mutate(\n    vulnerability_electricity = if_else(\n      q11_3 != 1, 1, 0)) |&gt; \n  select(-q11_3)\n\n# We check the distribution\n\nas.data.frame(table(vulnerable_electricity$vulnerability_electricity)) |&gt; \n  gt()\n\n\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n0\n13208\n\n\n\n\n\n\n\nNow, this is not a source of variation in the case of Georgia, since 100% of households report having access to electricity, but the methodology also mentions that “Access to markets and services, access to early warning systems, sanitation, and building and infrastructure quality are also playing a key role in determining disasters’ impacts, and has been included in other estimates, but is left for future inclusion here.” (Doan et al. 2023). Both sanitation and building infrastructure quality, proxied by wall materials could be included in Georgia’s estimates. When it comes to sanitation, there is still a gap that the country needs to close.",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#access-to-sanitation",
    "href": "supporting-materials/vulnerability.html#access-to-sanitation",
    "title": "Vulnerability Analysis",
    "section": "Access to sanitation",
    "text": "Access to sanitation\nFor this variable (TypeOfToilet) we have the following categories, of which we choose “own flush toilet connected to the sewerage system” and “shared flush toilet connected to the sewerage system” as having access to sanitation.\n\nOwn flush toilet connected to the sewerage system\nShared flush toilet connected to the sewerage system\nFlush latrine not connected to the sewerage system (connected to the river, chan\nPit latrine periodically cleaned or finally filled up and buried\nOther\n\n\nvulnerable_sanitation &lt;- poverty |&gt; \n  select(UID, TypeOfToilet) |&gt; \n  mutate(\n    vulnerability_sanitation = if_else(\n      TypeOfToilet &lt; 3, 0, 1)) |&gt; \n  select(-TypeOfToilet)\n\n# We check the distribution\n\nas.data.frame(table(vulnerable_sanitation$vulnerability_sanitation)) |&gt; \n  gt()\n\n\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n0\n5557\n\n\n1\n7651",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#building-materials",
    "href": "supporting-materials/vulnerability.html#building-materials",
    "title": "Vulnerability Analysis",
    "section": "Building materials",
    "text": "Building materials\nWhen it comes to building materials of walls and floor, data show that the most precarious categories (mud walls, and bare ground floors) are not present in the country. We will still count concrete walls as not vulnerable and wood as vulnerable, but only relative to each other, not making any assumptions about the quality of wood structures in Georgia.\n\nvulnerable_building &lt;- poverty |&gt; \n  select(UID, Walls) |&gt; \n  mutate(\n    vulnerability_building = if_else(\n      Walls %in% c(1,3), 0, 1)) |&gt; \n  select(-Walls)\n\n# We check the distribution\n\nas.data.frame(table(\n  vulnerable_building$vulnerability_building)) |&gt; \n  gt()\n\n\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n0\n11746\n\n\n1\n1462",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#social-protection",
    "href": "supporting-materials/vulnerability.html#social-protection",
    "title": "Vulnerability Analysis",
    "section": "Social protection",
    "text": "Social protection\n“The third dimension of inability to cope is access to public support. There is considerable evidence that cash transfers help households to manage shocks (…) [T]here is some evidence in favor of using information on current coverage, as support is more likely to be available in response to a disaster in places where pre-disaster coverage rates are high.” (Doan et al. 2023) In the poverty dataset the variable S_Q2b shows those households that actually received social protection benefits.\n\nvulnerable_ssp &lt;- poverty |&gt; \n  select(UID, S_Q2b) |&gt; \n  mutate(\n    vulnerability_ssp = if_else(\n      coalesce(S_Q2b, 0) == 1, 0, 1)) |&gt; \n  select(-S_Q2b)\n\n# We check the distribution\n\nas.data.frame(table(\n  vulnerable_ssp$vulnerability_ssp)) |&gt; \n  gt()\n\n\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n0\n2330\n\n\n1\n10878",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#financial-services",
    "href": "supporting-materials/vulnerability.html#financial-services",
    "title": "Vulnerability Analysis",
    "section": "Financial services",
    "text": "Financial services\n“The variable we use indicates whether a respondent has either a financial institution account or a mobile money account, given the strong relationship in the literature on access to mobile money and ability to use informal networks to manage the impact of large climate shocks.” (Doan et al. 2023) The poverty dataset has information on amount saved by the household, which we will use as proxy for access to some financial security. We cannot assert that the money is being saved in a proper financial institution. However, we assume that having monthly level of savings of any kind can mitigate the impacts of climate change.\n\nvulnerable_financial &lt;- poverty |&gt; \n  select(UID, DazogvaAnCasesxeba) |&gt; \n  mutate(\n    vulnerability_financial = if_else(\n      coalesce(DazogvaAnCasesxeba, 0) == 0, 1, 0)) |&gt; \n  select(-DazogvaAnCasesxeba)\n\n# We check the distribution\n\nas.data.frame(table(\n  vulnerable_financial$vulnerability_financial)) |&gt; \n  gt()\n\n\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n0\n4777\n\n\n1\n8431",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#join-vulnerability-datasets",
    "href": "supporting-materials/vulnerability.html#join-vulnerability-datasets",
    "title": "Vulnerability Analysis",
    "section": "Join vulnerability datasets",
    "text": "Join vulnerability datasets\n\n# List of data frames to join\nvulnerable_data &lt;- list(\n  vulnerable_education,\n  vulnerable_water,\n  vulnerable_electricity,\n  vulnerable_sanitation,\n  vulnerable_building,\n  vulnerable_ssp,\n  vulnerable_financial\n)\n\n# Start with the initial data frame\nfor (df in vulnerable_data) {\n  hh_vulnerable &lt;- hh_vulnerable |&gt; left_join(df, join_by(UID))\n}",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#exposure-to-extreme-weather-events-and-poverty",
    "href": "supporting-materials/vulnerability.html#exposure-to-extreme-weather-events-and-poverty",
    "title": "Vulnerability Analysis",
    "section": "Exposure to extreme weather events and poverty",
    "text": "Exposure to extreme weather events and poverty\nWe first replicate the paper’s graph regarding exposure at different return periods. Exposure numbers are presented for a range of return periods (from 5 to 100) at one intensity threshold: flood inundation of 15cm, 50cm and 150cm. Exposure falls with the event severity and increases with the return period.The figure shows that, given increasing return periods, exposure will increase more dramatically at a 100 year return period for Tbilisi (88,865 individuals), Imereti (53,027), Samergeolo and Zemo (upper) Svaneti (48,964), and Shida Kartli (36,314).\n\nfloods_all_returns$regions &lt;- factor(\n  floods_all_returns$regions,\n  levels = unique(floods_all_returns$regions)\n)\n\nfloods_all_returns |&gt; \n  filter(rt_period &lt; 200) |&gt; \n  ggplot(aes(\n    x = rt_period, \n    y = exposure, \n    color = regions)) +\n  geom_line(size = 1) +                      # Add lines for each region\n  geom_point(size = 3) +                     # Add points for each region\n  scale_color_manual(\n    values = c(\n      \"yellow\",    \"darkblue\", \"orange\", \n      \"gold\",      \"green\",    \"purple\", \n      \"cyan\",      \"brown\",    \"pink\", \n      \"darkgreen\", \"navy\",     \"red\"\n  )) +                                       # Provide enough colors for all regions\n  labs(\n    title = \"Flood exposure by return period\",\n    subtitle = \"Regions of Georgia\",\n    x = \"Return period (years)\",\n    y = \"Population exposed (individuals)\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.title = element_blank(),          # Remove legend title\n    legend.position = \"right\"                # Position legend on the right\n  )\n\n\n\n\n\n\n\nFigure 2: Georgia: Flood exposure by return period and region\n\n\n\n\n\n\nExtreme weather and poor by region\nWe now turn to the question of those who are exposed and poor. We use the official poverty line.\n\nexposed_and_poor &lt;- vulnerable_data |&gt;\n  mutate(\n    conspoor = if_else(\n      aecons &lt; pline, \"Below PL\", \"Above PL\"),\n    individuals = weights_exposure * hhsize\n  ) |&gt; \n  group_by(as_factor(RegNo), exposed_to_floods, conspoor) |&gt; \n  summarize(\n    individuals = sum(individuals, na.rm = TRUE)\n  ) |&gt; \n  pivot_wider(\n    id_cols = c(`as_factor(RegNo)`),\n    names_from = c(exposed_to_floods, conspoor),\n    values_from = individuals,\n    names_expand = TRUE\n  ) |&gt; \n  mutate(\n    total_population = rowSums(across(c(1:4)), na.rm = TRUE),\n    total_exposed = rowSums(across(starts_with(\"Exposed_\")), na.rm = T),\n    Pct_exposed_from_total = total_exposed / total_population * 100,\n    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100\n  ) |&gt; \n  select(\n    `as_factor(RegNo)`,\n    total_population,\n    total_exposed,\n    `Exposed_Below PL`,\n    starts_with(\"Pct\")\n  )\n\nnames(exposed_and_poor) &lt;- c(\n  \"Regions\",\n  \"Total Population\",\n  \"Total Exposed\",\n  \"Exposed Below PL\",\n  \"Pct. exposed from total\",\n  \"Pct. Below PL from exposed\"\n)\n\nexposed_and_poor |&gt; \n  ungroup() |&gt; \n  gt() |&gt; \n  fmt_number(\n    columns = c(2:4),   # Apply formatting to totals columns\n    decimals = 0,                 # Set no decimals\n    use_seps = TRUE               # Use thousands separator\n  ) |&gt; \n  fmt_number(\n    columns = c(5:6),   # Apply formatting to percent columns\n    decimals = 1                 # Set one decimal\n  )\n\n\n\nTable 2: Number of people exposed to extreme weather and poor\n\n\n\n\n\n\n\n\n\nRegion\nTotal Population\nTotal Exposed\nExposed Below PL\nPct. exposed from total\nPct. Below PL from exposed\n\n\n\n\nKakheti\n307,650\n6,435\n477\n2.1\n7.4\n\n\nTbilisi\n1,206,504\n92,180\n5,067\n7.6\n5.5\n\n\nShida Kartli\n251,397\n35,789\n4,667\n14.2\n13.0\n\n\nKvemo Kartli\n454,698\n22,140\n4,077\n4.9\n18.4\n\n\nSamtskhe-Javakheti\n150,422\n19,075\n2,120\n12.7\n11.1\n\n\nAdjara A.R.\n370,642\n23,388\n3,902\n6.3\n16.7\n\n\nGuria\n104,588\n11,580\n2,932\n11.1\n25.3\n\n\nSamegrelo-Zemo Svaneti\n285,438\n45,639\n7,934\n16.0\n17.4\n\n\nImereti\n459,035\n49,247\n4,905\n10.7\n10.0\n\n\nMtskheta-Mtianeti\n95,389\n9,868\n1,549\n10.3\n15.7\n\n\nRacha-Lechkhumi and Kvemo Svaneti\n28,113\n6,214\n879\n22.1\n14.1\n\n\n\n\n\n\n\n\n\n\n\n\nExtreme weather and poor by consumption quintile\nThe paper replicates the table by country income level. Since our tables are at the country level, we could replicate these results by income (consumption) quintile, but as evident below it is a rather uninformative table, because those below poverty belong exclusively to the first quintile, leaving the remaining of the table unpopulated.\n\nexposed_and_poor_q &lt;- vulnerable_data |&gt;\n  mutate(\n    conspoor = if_else(\n      aecons &lt; pline, \"Below PL\", \"Above PL\"),\n    individuals = weights_exposure * hhsize\n  ) |&gt; \n  group_by(quintilc, exposed_to_floods, conspoor) |&gt; \n  summarize(\n    individuals = sum(coalesce(individuals,0), na.rm = TRUE)\n  ) |&gt; \n  pivot_wider(\n    id_cols = c(quintilc),\n    names_from = c(exposed_to_floods, conspoor),\n    values_from = individuals,\n    names_expand = TRUE,\n    values_fill = 0\n  ) |&gt; \n  mutate(\n    total_population = rowSums(across(c(1:4)), na.rm = TRUE),\n    total_exposed = rowSums(across(starts_with(\"Exposed_\")), na.rm = T),\n    Pct_exposed_from_total = total_exposed / total_population * 100,\n    Pct_below_from_exposed = `Exposed_Below PL` / total_exposed *100\n  ) |&gt; \n  select(\n    quintilc,\n    total_population,\n    total_exposed,\n    `Exposed_Below PL`,\n    starts_with(\"Pct\")\n  ) |&gt; \n  ungroup()\n\ncolnames(exposed_and_poor_q) &lt;- c(\n  \"Quintiles\",\n  \"Total Population\",\n  \"Total Exposed\",\n  \"Exposed Below PL\",\n  \"Pct. exposed from total\",\n  \"Pct. Below PL from exposed\"\n)\n\nexposed_and_poor_q |&gt; \n  gt() |&gt; \n  fmt_number(\n    columns = c(2:4),   # Apply formatting to totals columns\n    decimals = 0,                 # Set no decimals\n    use_seps = TRUE               # Use thousands separator\n  ) |&gt; \n  fmt_number(\n    columns = c(5:6),   # Apply formatting to percent columns\n    decimals = 1                 # Set one decimal\n  )\n\n\n\nTable 3: Number of people exposed to extreme weather and poor\n\n\n\n\n\n\n\n\n\nQuintiles of aecons\nTotal Population\nTotal Exposed\nExposed Below PL\nPct. exposed from total\nPct. Below PL from exposed\n\n\n\n\n1\n676,026\n60,685\n38,508\n9.0\n63.5\n\n\n2\n826,458\n69,537\n0\n8.4\n0.0\n\n\n3\n787,172\n68,020\n0\n8.6\n0.0\n\n\n4\n721,889\n61,521\n0\n8.5\n0.0\n\n\n5\n702,330\n61,793\n0\n8.8\n0.0",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#at-risk-from-extreme-weather-events",
    "href": "supporting-materials/vulnerability.html#at-risk-from-extreme-weather-events",
    "title": "Vulnerability Analysis",
    "section": "At risk from extreme weather events",
    "text": "At risk from extreme weather events\n\nNumber of people exposed and vulnerable in each indicator\n“For these same events and risk thresholds, we consider the share of households that are exposed and highly vulnerable. Being highly vulnerable is defined as failing to reach the threshold in or lacking access to one or more dimensions (e.g., lacking access to electricity or coverage by social protection or having an insufficient income).” (Doan et al. 2023)\n\nat_risk &lt;- vulnerable_data |&gt;\n  mutate(\n    conspoor = if_else(\n      aecons &lt; pline, \"Below PL\", \"Above PL\"),\n    individuals = weights_exposure * hhsize,\n    risk_income = individuals * vulnerability_income,\n    risk_education = individuals * vulnerability_education,\n    risk_water = individuals * vulnerability_water,\n    # risk_electricity = individuals * vulnerability_electricity, # 100% in GEO\n    risk_sanitation = individuals * vulnerability_sanitation,\n    risk_building = individuals * vulnerability_building,\n    risk_ssp = individuals * vulnerability_ssp,\n    risk_financial = individuals * vulnerability_financial\n  ) |&gt; \n  group_by(as_factor(RegNo), exposed_to_floods) |&gt; \n  summarize(\n    Individuals = sum(individuals, na.rm = T),\n    Income = sum(risk_income, na.rm = T),\n    Education = sum(risk_education, na.rm = T),\n    Water = sum(risk_water, na.rm = T),\n    # Electricity = sum(risk_income, na.rm = T),\n    Sanitation = sum(risk_sanitation, na.rm = T),\n    Buildings = sum(risk_building, na.rm = T),\n    SSP = sum(risk_ssp, na.rm = T),\n    Financial = sum(risk_financial, na.rm = T)\n  ) |&gt; \n  pivot_wider(\n    id_cols = c(`as_factor(RegNo)`),\n    names_from = c(exposed_to_floods),\n    values_from = c(\n      Individuals,\n      Income,\n      Education,\n      Water,\n      # Electricity,\n      Sanitation,\n      Buildings,\n      SSP,\n      Financial),\n    names_expand = TRUE\n  ) |&gt; \n  mutate(\n    total_population = rowSums(across(starts_with(\"Individuals_\")), na.rm = TRUE),\n  ) |&gt; \n  select(\n    `as_factor(RegNo)`,\n    total_population,\n    ends_with(\"_Exposed\")\n  ) |&gt; \n  ungroup()\n\nnames(at_risk) &lt;- c(\n  \"Regions\",\n  \"Total Population\",\n  \"Total Exposed\",\n  \"Income\",\n  \"Education\",\n  \"Water\",\n  \"Sanitation\",\n  \"Buildings\",\n  \"Social Protection\",\n  \"Financial inclusion\"\n)\n\nat_risk |&gt; \n  ungroup() |&gt; \n  gt() |&gt; \n  fmt_number(\n    columns = where(is.numeric),   # Apply formatting to totals columns\n    decimals = 0,                 # Set no decimals\n    use_seps = TRUE               # Use thousands separator\n  )\nwrite.table(at_risk, \"clipboard\", sep = \"\\t\", row.names = F)\n\n\n\nTable 4: Number of people exposed and vulnerable by region\n\n\n\n\n\n\n\n\n\nRegion\nTotal Population\nTotal Exposed\nIncome\nEducation\nWater\nSanitation\nBuildings\nSocial Protection\nFinancial inclusion\n\n\n\n\nKakheti\n307,650\n6,435\n1,462\n0\n1,344\n5,500\n0\n5,562\n3,816\n\n\nTbilisi\n1,206,504\n92,180\n22,275\n0\n0\n351\n417\n78,230\n61,190\n\n\nShida Kartli\n251,397\n35,789\n10,725\n51\n9,154\n19,837\n480\n29,582\n19,092\n\n\nKvemo Kartli\n454,698\n22,140\n9,866\n187\n1,608\n12,548\n895\n17,200\n16,079\n\n\nSamtskhe-Javakheti\n150,422\n19,075\n4,545\n0\n527\n10,792\n711\n17,322\n8,935\n\n\nAdjara A.R.\n370,642\n23,388\n9,368\n0\n3,601\n8,754\n3,259\n19,401\n11,569\n\n\nGuria\n104,588\n11,580\n6,547\n0\n4,836\n8,391\n4,119\n9,425\n7,691\n\n\nSamegrelo-Zemo Svaneti\n285,438\n45,639\n17,925\n0\n25,669\n34,630\n10,065\n37,740\n30,110\n\n\nImereti\n459,035\n49,247\n10,541\n0\n14,325\n24,106\n2,647\n38,173\n23,016\n\n\nMtskheta-Mtianeti\n95,389\n9,868\n3,945\n11\n424\n5,634\n22\n8,680\n6,632\n\n\nRacha-Lechkhumi and Kvemo Svaneti\n28,113\n6,214\n1,757\n0\n573\n3,726\n1,785\n3,385\n3,486\n\n\n\n\n\n\n\n\n\n\n\n\nNumber of people highly vulnerable on multiple dimensions\n\nat_risk_dimensions &lt;- vulnerable_data |&gt;\n  mutate(\n    individuals = weights_exposure * hhsize,\n    number_of_dimensions = rowSums(across(starts_with(\"vulnerability_\")))\n    ) |&gt; \n  group_by(\n    as_factor(RegNo), \n    exposed_to_floods, \n    number_of_dimensions) |&gt; \n  summarize(\n    Individuals = sum(individuals, na.rm = T),\n  ) |&gt; \n  pivot_wider(\n    id_cols = c(`as_factor(RegNo)`),\n    names_from = c(exposed_to_floods, number_of_dimensions),\n    values_from = c(\n      Individuals),\n    names_expand = TRUE,\n    values_fill = 0\n  ) |&gt; \n  mutate(\n    total_population = rowSums(across(where(is.numeric)), na.rm = TRUE),\n    total_exposed = rowSums(across(starts_with(\"Exposed_\")), na.rm = TRUE)\n  ) |&gt; \n  select(\n    `as_factor(RegNo)`,\n    total_population,\n    total_exposed,\n    starts_with(\"Exposed_\")\n  ) |&gt; \n  ungroup()\n\nnames(at_risk_dimensions) &lt;- c(\n  \"Regions\",\n  \"Total Population\",\n  \"Total Exposed\",\n  \"0 dimensions\",\n  \"1 dimension\",\n  \"2 dimensions\",\n  \"3 dimensions\",\n  \"4 dimensions\",\n  \"5 dimensions\",\n  \"6 dimensions\"\n)\n\nat_risk_dimensions |&gt; \n  gt() |&gt; \n  fmt_number(\n    columns = where(is.numeric),   # Apply formatting to totals columns\n    decimals = 0,                 # Set no decimals\n    use_seps = TRUE               # Use thousands separator\n  )\n# write.table(at_risk_dimensions, \"clipboard\", sep = \"\\t\", row.names = F)\n\n\n\nTable 5: Number of people highly vulnerable on multiple dimensions\n\n\n\n\n\n\n\n\n\nRegion\nTotal Population\nTotal Exposed\n0 dimensions\n1 dimension\n2 dimensions\n3 dimensions\n4 dimensions\n5 dimensions\n6 dimensions\n\n\n\n\nKakheti\n307,650\n6,435\n0\n555\n1,926\n2,593\n1,306\n55\n0\n\n\nTbilisi\n1,206,504\n92,180\n2,088\n28,552\n50,877\n10,496\n167\n0\n0\n\n\nShida Kartli\n251,397\n35,789\n50\n7,054\n10,963\n12,153\n4,393\n1,152\n26\n\n\nKvemo Kartli\n454,698\n22,140\n155\n3,449\n6,095\n7,320\n4,821\n300\n0\n\n\nSamtskhe-Javakheti\n150,422\n19,075\n0\n2,960\n9,497\n5,687\n836\n94\n0\n\n\nAdjara A.R.\n370,642\n23,388\n123\n5,746\n8,252\n5,136\n2,584\n1,322\n224\n\n\nGuria\n104,588\n11,580\n15\n632\n2,365\n2,105\n3,469\n2,511\n484\n\n\nSamegrelo-Zemo Svaneti\n285,438\n45,639\n0\n3,506\n8,984\n9,278\n13,657\n9,083\n1,132\n\n\nImereti\n459,035\n49,247\n1,871\n13,060\n13,742\n11,645\n7,315\n1,614\n0\n\n\nMtskheta-Mtianeti\n95,389\n9,868\n102\n1,853\n2,374\n3,657\n1,631\n250\n0\n\n\nRacha-Lechkhumi and Kvemo Svaneti\n28,113\n6,214\n189\n1,398\n1,981\n1,621\n719\n220\n86\n\n\n\n\n\n\n\n\n\n\n\n\nTraditionally vulnerable groups\n\ntraditionally_vulnerable &lt;- vulnerable_data |&gt;\n  mutate(\n    all_members = weights_exposure * hhsize,\n    children = weights_exposure * Childern,\n    youth = weights_exposure * Adult,\n    women = weights_exposure * Working_age_Woman,\n    men = weights_exposure * Working_age_man,\n    elderly = weights_exposure *\n      (Pensioner_age_man + Pensioner_age_Woman)\n  ) |&gt;\n  select(\n    UID,\n    RegNo,\n    type,\n    # all_members,\n    children,\n    youth,\n    women,\n    elderly,\n    men,\n    vulnerability_income,\n    vulnerability_education,\n    vulnerability_water,\n    vulnerability_sanitation,\n    vulnerability_building,\n    vulnerability_ssp,\n    vulnerability_financial,\n    exposed_to_floods\n  ) |&gt;\n  pivot_longer(\n    cols = starts_with(\"vulnerability_\"),\n    names_to = \"vulnerability_type\",\n    names_prefix = \"vulnerability_\",\n    values_to = \"is_vulnerable\"\n  ) |&gt;\n  pivot_longer(\n    cols = c(children, youth, women, elderly, men),\n    names_to = \"vulnerable_group\",\n    values_to = \"no_vulnerable_people\"\n  ) |&gt;\n  filter(is_vulnerable == 1, exposed_to_floods == \"Exposed\") |&gt;\n  mutate(\n    vulnerability_type = factor(\n      vulnerability_type,\n      levels = c(\n        \"income\",\n        \"education\",\n        \"water\",\n        \"sanitation\",\n        \"building\",\n        \"ssp\",\n        \"financial\"\n      )\n    ),\n    vulnerable_group = factor(\n      vulnerable_group,\n      levels = c(\n        \"children\", \"youth\", \n        \"women\", \"elderly\", \"men\"),\n      # labels(\n      #   \"Children\", \"Youth\", \n      #   \"Women\", \"Elderly\", \"Men\"\n      # )\n    )\n  )\n\ntraditionally_vulnerable_area &lt;- traditionally_vulnerable |&gt; \n  group_by(\n    as_factor(type),\n    vulnerability_type,\n    vulnerable_group\n  ) |&gt; \n  summarize(\n    value = sum(no_vulnerable_people, na.rm = T)\n  ) |&gt; \n  pivot_wider(\n    id_cols = c(\n      `as_factor(type)`,\n      vulnerable_group\n    ),\n    names_from = vulnerability_type,\n    values_from = value,\n    names_expand = T,\n    values_fill = 0\n  ) \n\ncolnames(traditionally_vulnerable_area) &lt;- c(\n  \"Area\", \"Group\", \"Income\",\n  \"Education\", \"Water\", \"Sanitation\",\n  \"Building\", \"Social Protection\", \"Financial\"\n)\n\ntraditionally_vulnerable_area |&gt; \n  # ungroup() |&gt;\n  gt() |&gt; \n  summary_rows(\n    groups = everything(),\n    columns = c(\n      \"Income\", \"Education\", \n      \"Water\", \"Sanitation\",\n      \"Building\", \"Social Protection\", \n      \"Financial\"),\n    fns = list(label = \"Subtotal\", id = \"subtotals\", fn = \"sum\")\n  ) |&gt; \n  grand_summary_rows(\n    columns = c(\n      \"Income\", \"Education\", \n      \"Water\", \"Sanitation\",\n      \"Building\", \"Social Protection\", \n      \"Financial\"),\n    fns = list(label = \"Total\", id = \"totals\", fn = \"sum\")\n  )\n# names(exposed_and_poor) &lt;- c(\n#   \"Regions\",\n#   \"Total Population\",\n#   \"Total Exposed\",\n#   \"Exposed Below PL\",\n#   \"Pct. exposed from total\",\n#   \"Pct. Below PL from exposed\"\n# )\n# write.table((traditionally_vulnerable_rural), \"clipboard\", sep = \"\\t\", row.names = F)\n# writeClipboard(as_raw_html(traditionally_vulnerable_rural))\n\n\n\nTable 6: Number of people at risk from traditionally vulnerable groups\n\n\n\n\n\n\n\n\n\n\nGroup\nIncome\nEducation\nWater\nSanitation\nBuilding\nSocial Protection\nFinancial\n\n\n\n\nUrban\n\n\n\nchildren\n4973.215\n0.00000\n106.2592\n1183.134\n578.8928\n13823.046\n8414.002\n\n\n\nyouth\n7147.863\n0.00000\n370.4468\n1707.531\n673.8152\n16043.521\n12074.951\n\n\n\nwomen\n13803.958\n0.00000\n568.3721\n4296.589\n1797.5706\n46870.276\n31181.670\n\n\n\nelderly\n8786.141\n0.00000\n570.9228\n4411.369\n1418.4736\n38762.553\n27757.956\n\n\n\nmen\n14071.600\n0.00000\n710.6323\n4314.826\n1803.9962\n48231.634\n29708.787\n\n\nSubtotal\n—\n48782.78\n0.0000\n2326.633\n15913.45\n6272.748\n163731.0\n109137.37\n\n\nRural\n\n\n\nchildren\n4875.646\n0.00000\n4896.4696\n9576.187\n1314.2184\n7267.694\n6394.284\n\n\n\nyouth\n6146.748\n79.88596\n6178.4539\n12265.521\n1332.9164\n8504.401\n7240.389\n\n\n\nwomen\n13186.474\n53.25730\n14062.3933\n28752.102\n4195.1169\n24259.520\n19368.964\n\n\n\nelderly\n10118.454\n89.25736\n16705.5469\n31258.916\n5857.1767\n29150.273\n23982.255\n\n\n\nmen\n15846.988\n26.62865\n17892.7140\n36503.605\n5428.6156\n31787.209\n25491.481\n\n\nSubtotal\n—\n50174.31\n249.0293\n59735.578\n118356.33\n18128.044\n100969.1\n82477.37\n\n\nTotal\n—\n98957.09\n249.0293\n62062.21\n134269.8\n24400.79\n264700.1\n191614.7",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#exposed",
    "href": "supporting-materials/vulnerability.html#exposed",
    "title": "Vulnerability Analysis",
    "section": "Exposed",
    "text": "Exposed\n\nmap_object &lt;-\ntm_shape(exposed_and_poor_map)+\n  tm_polygons(\"Pct. exposed from total\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 5,\n              breaks = c(0, 5, 10, 15, 20, 25, 30),\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_exposed_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent exposed from total\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_exposed_fm_total.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 3: Percent exposed from total",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#exposed-and-poor",
    "href": "supporting-materials/vulnerability.html#exposed-and-poor",
    "title": "Vulnerability Analysis",
    "section": "Exposed and poor",
    "text": "Exposed and poor\n\nmap_object &lt;-\ntm_shape(exposed_and_poor_map)+\n  tm_polygons(\"Pct. Below PL from exposed\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 5,\n              breaks = c(0, 5, 10, 15, 20, 25, 30),\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_exposed_poor_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent below poverty line\\nfrom those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_poor_fm_exposed.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 4: Percent below poverty line from those exposed",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#at-risk-by-dimension",
    "href": "supporting-materials/vulnerability.html#at-risk-by-dimension",
    "title": "Vulnerability Analysis",
    "section": "At risk by dimension",
    "text": "At risk by dimension\n\nat_risk_map &lt;- adm1 |&gt; \n  left_join(\n    at_risk,\n    join_by(region == Regions)\n  ) |&gt; \n  mutate(\n    region = case_when(\n      region == \"Racha-Lechkhumi and Kvemo Svaneti\" ~\n      \"Racha-Lechkhumi\\nand Kvemo Svaneti\",\n      region == \"Samegrelo-Zemo Svaneti\" ~\n      \"Samegrelo-\\nZemo\\nSvaneti\",\n      region == \"Mtskheta-Mtianeti\" ~\n      \"Mtskheta-\\nMtianeti\",\n      region == \"Samtskhe-Javakheti\" ~\n      \"Samtskhe-\\nJavakheti\",\n      .default = region\n    ),\n    pct_income = Income / `Total Exposed` * 100,\n    pct_education = Education  / `Total Exposed` * 100,\n    pct_water = Water / `Total Exposed` * 100,\n    pct_sanitation = Sanitation  / `Total Exposed` * 100,\n    pct_buildings = Buildings / `Total Exposed` * 100,\n    pct_ssp = `Social Protection` / `Total Exposed` * 100,\n    pct_financial = `Financial inclusion` / `Total Exposed` * 100,\n    pct_income_label = if_else(\n      is.na(Income), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_income)\n      ) \n    ),\n    pct_education_label = if_else(\n      is.na(Education), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_education)\n      ) \n    ),\n    pct_water_label = if_else(\n      is.na(Water), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_water)\n      ) \n    ),\n    pct_sanitation_label = if_else(\n      is.na(Sanitation), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_sanitation)\n      ) \n    ),\n    pct_buildings_label = if_else(\n      is.na(Buildings), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_buildings)\n      ) \n    ),\n    pct_ssp_label = if_else(\n      is.na(`Social Protection`), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_ssp)\n      ) \n    ),\n    pct_financial_label = if_else(\n      is.na(`Financial inclusion`), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_financial)\n      ) \n    )\n  )\n\n\nIncome\n\nmap_object &lt;-\ntm_shape(at_risk_map)+\n  tm_polygons(\"pct_income\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 10,\n              breaks = c(0, 10, 20, 30, 40, 50, 60),\n              palette = \"Blues\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_income_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent income dimension\\nfrom those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_income.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 5: Percent with income dimension from those exposed\n\n\n\n\n\n\n\nEducation\n\nmap_object &lt;-\ntm_shape(at_risk_map)+\n  tm_polygons(\"pct_education\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 10,\n              breaks = c(0, 10, 20, 30, 40, 50, 60),\n              palette = \"Blues\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_education_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent education dimension\\nfrom those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_education.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 6: Percent with education dimension from those exposed\n\n\n\n\n\n\n\nWater\n\nmap_object &lt;-\ntm_shape(at_risk_map)+\n  tm_polygons(\"pct_water\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 10,\n              breaks = c(0, 10, 20, 30, 40, 50, 60),\n              palette = \"Blues\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_water_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent water dimension\\nfrom those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_water.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 7: Percent with water dimension from those exposed\n\n\n\n\n\n\n\nSanitation\n\nmap_object &lt;-\ntm_shape(at_risk_map)+\n  tm_polygons(\"pct_sanitation\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 20,\n              breaks = c(0, 20, 40, 60, 80, 100),\n              palette = \"Blues\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_sanitation_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent sanitation dimension\\nfrom those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_sanitation.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 8: Percent with sanitation dimension from those exposed\n\n\n\n\n\n\n\nBuilding materials\n\nmap_object &lt;-\ntm_shape(at_risk_map)+\n  tm_polygons(\"pct_buildings\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 10,\n              breaks = c(0, 10, 20, 30, 40, 50, 60),\n              palette = \"Blues\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_buildings_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent building materials\\ndimension from those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_buildings.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 9: Percent with buildings dimension from those exposed\n\n\n\n\n\n\n\nSocial protection\n\nmap_object &lt;-\ntm_shape(at_risk_map)+\n  tm_polygons(\"pct_ssp\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 10,\n              breaks = c(50,60, 70,80, 90, 100),\n              palette = \"Blues\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_ssp_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent social protection\\ndimension from those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_ssp.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 10: Percent with social dimension from those exposed\n\n\n\n\n\n\n\nFinancial services\n\nmap_object &lt;-\ntm_shape(at_risk_map)+\n  tm_polygons(\"pct_financial\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 10,\n              breaks = c(40, 50,60, 70,80, 90, 100),\n              palette = \"Blues\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_financial_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent financial dimension\\nfrom those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_financial.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 11: Percent with financial dimension from those exposed",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#at-risk-by-many-dimensions",
    "href": "supporting-materials/vulnerability.html#at-risk-by-many-dimensions",
    "title": "Vulnerability Analysis",
    "section": "At risk by many dimensions",
    "text": "At risk by many dimensions\nPrepare map data\n\nat_risk_dimensions_map &lt;- adm1 |&gt; \n  left_join(\n    at_risk_dimensions,\n    join_by(region == Regions)\n  ) |&gt; \n  mutate(\n    region = case_when(\n      region == \"Racha-Lechkhumi and Kvemo Svaneti\" ~\n      \"Racha-Lechkhumi\\nand Kvemo Svaneti\",\n      region == \"Samegrelo-Zemo Svaneti\" ~\n      \"Samegrelo-\\nZemo\\nSvaneti\",\n      region == \"Mtskheta-Mtianeti\" ~\n      \"Mtskheta-\\nMtianeti\",\n      region == \"Samtskhe-Javakheti\" ~\n      \"Samtskhe-\\nJavakheti\",\n      .default = region\n    ),\n    up_to_2_dims = case_when(\n      is.na(`1 dimension`) | is.na(`2 dimensions`) ~ NA,\n      .default = `1 dimension` + `2 dimensions`\n    ),\n    pct_up_to_2_dims = if_else(\n      is.na(`Total Exposed`), `Total Exposed`,\n      up_to_2_dims / `Total Exposed` * 100\n    )\n  ) |&gt; \n  mutate(\n    pct_up_to_2_dims_label = if_else(\n      is.na(pct_up_to_2_dims), \n      NA, \n      paste(\n        region,\n        sprintf(\"\\n%.1f%%\", pct_up_to_2_dims)\n      ) \n    )\n  )\n\n\nmap_object &lt;-\ntm_shape(at_risk_dimensions_map)+\n  tm_polygons(\"pct_up_to_2_dims\",\n              title=\"Percent\", \n              legend.show = TRUE,\n              style = \"fixed\",\n              scale = 10,\n              breaks = c(20,40, 50,60, 70,80, 90,100),\n              palette = \"Purples\",\n              textNA = \"Unavailable\",\n              colorNA = \"grey\"\n              ) +\n  tm_text(c(\"pct_up_to_2_dims_label\"), size = .7, col = \"black\")+\n  tm_layout(\n    #legend.outside = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Percent with up to 2 dimensions\\nfrom those exposed\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9)\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/pct_flood_up_to_2_dimensions.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 12: Percent with up to 2 dimensions from those exposed",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/vulnerability.html#gridded-population",
    "href": "supporting-materials/vulnerability.html#gridded-population",
    "title": "Vulnerability Analysis",
    "section": "Gridded population",
    "text": "Gridded population\n\npop &lt;- raster::raster(\"data/gis/grided_population_2020.tif\")\n\nmap_object &lt;-\ntm_shape(pop) +\n  tm_raster(\"grided_population_2020\", \n            style = \"fixed\", \n            breaks = c(0, 100, 150, 200, 600, 800, 1000, 10000),\n            # palette = \"YlOrRd\",\n            palette = \"BuPu\",\n            title = \"People per pixel\") +\n  tm_shape(adm1) +\n  tm_borders() +\n  tm_layout(\n    legend.position = c(\"right\", \"top\"),\n    title.snap.to.legend = FALSE,\n    title = \n      \"Spatially distributed population layer\",\n    frame = FALSE,\n#            outer.margins=c(.10,.10, .10, .10), \n            title.position = c('left', 'bottom'),\n            title.size = 0.9\n    )\n\ntmap_save(\n  map_object,\n  \"data/outputs/vulnerability_img/gridded_pop_2020.svg\",\n  width = 8,\n  height = 5,\n  units = \"in\"\n)\nmap_object\n\n\n\n\n\n\n\nFigure 13: Gridded population",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Vulnerability Analysis"
    ]
  },
  {
    "objectID": "supporting-materials/geo-microsimulation.html",
    "href": "supporting-materials/geo-microsimulation.html",
    "title": "Georgia CCDR Microsimulation",
    "section": "",
    "text": "In this calculation file, we “age” the Georgian household survey according to demographic projections and different macroeconomic scenarios to explore the impact of climate-related risks and policy measures on the consumption expenditure distribution. It is part of a larger project with all background contributions to Georgia’s CCDR, available in this repository.\n\n# Georgia administrative level 1 shapefile\nadm1 &lt;- sf::read_sf(\"data/gis/geo-adm1.shp\") |&gt; \n  dplyr::select(ADM1_PCODE, ADM1_EN, ADM1_KA, geometry) |&gt; \n  dplyr::arrange(ADM1_PCODE)\n\ntmap::tm_shape(adm1)+\n  tmap::tm_fill(\"ADM1_EN\", legend.show = FALSE, palette = \"Set1\") +\n  tmap::tm_text(\"ADM1_EN\", size = 0.65, auto.placement = T, col = \"black\")+\n  tmap::tm_layout(frame = F)\n\n\n\n\n\n\n\nFigure 1: Map of Georgia at administrative level 1\n\n\n\n\n\nAs a convention, code is presented in the following format in this guide:\n\n# Some comment that is not evaluated by R\nsome_variable &lt;- some_function(some_object, some_parameter = TRUE)\n\nWe assume that the reader has created an Rstudio project and is familiar with basic R functions. Within that project we recommend the following file structure:\n#| eval: false\nroot/\n├── supporting-materials\n│   ├── my_script.R\n|   └── my_script.qmd\n|   └── my_script.do\n├── data/\n|   ├── my_data.sav\n|   ├── my_data.dta\n|   └── my_data.csv\n└── output\n    ├── my_output1.csv\n    └── my_output2.xlsx\nUsing RStudio project makes it possible to not use setwd() to establish the root directory and refer to subdirectories in a relative manner, making interoperability easier within teams and not hard coding a particular computer’s file structure into the code. If you are not using RStudio, just add setwd(r'(C:\\My\\path\\to\\project\\root)') at the beginning of your coding session.",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Georgia CCDR Microsimulation"
    ]
  },
  {
    "objectID": "supporting-materials/geo-microsimulation.html#introduction",
    "href": "supporting-materials/geo-microsimulation.html#introduction",
    "title": "Georgia CCDR Microsimulation",
    "section": "",
    "text": "In this calculation file, we “age” the Georgian household survey according to demographic projections and different macroeconomic scenarios to explore the impact of climate-related risks and policy measures on the consumption expenditure distribution. It is part of a larger project with all background contributions to Georgia’s CCDR, available in this repository.\n\n# Georgia administrative level 1 shapefile\nadm1 &lt;- sf::read_sf(\"data/gis/geo-adm1.shp\") |&gt; \n  dplyr::select(ADM1_PCODE, ADM1_EN, ADM1_KA, geometry) |&gt; \n  dplyr::arrange(ADM1_PCODE)\n\ntmap::tm_shape(adm1)+\n  tmap::tm_fill(\"ADM1_EN\", legend.show = FALSE, palette = \"Set1\") +\n  tmap::tm_text(\"ADM1_EN\", size = 0.65, auto.placement = T, col = \"black\")+\n  tmap::tm_layout(frame = F)\n\n\n\n\n\n\n\nFigure 1: Map of Georgia at administrative level 1\n\n\n\n\n\nAs a convention, code is presented in the following format in this guide:\n\n# Some comment that is not evaluated by R\nsome_variable &lt;- some_function(some_object, some_parameter = TRUE)\n\nWe assume that the reader has created an Rstudio project and is familiar with basic R functions. Within that project we recommend the following file structure:\n#| eval: false\nroot/\n├── supporting-materials\n│   ├── my_script.R\n|   └── my_script.qmd\n|   └── my_script.do\n├── data/\n|   ├── my_data.sav\n|   ├── my_data.dta\n|   └── my_data.csv\n└── output\n    ├── my_output1.csv\n    └── my_output2.xlsx\nUsing RStudio project makes it possible to not use setwd() to establish the root directory and refer to subdirectories in a relative manner, making interoperability easier within teams and not hard coding a particular computer’s file structure into the code. If you are not using RStudio, just add setwd(r'(C:\\My\\path\\to\\project\\root)') at the beginning of your coding session.",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Georgia CCDR Microsimulation"
    ]
  },
  {
    "objectID": "supporting-materials/geo-microsimulation.html#preamble",
    "href": "supporting-materials/geo-microsimulation.html#preamble",
    "title": "Georgia CCDR Microsimulation",
    "section": "2 Preamble",
    "text": "2 Preamble\nWe start with a clean environment, making sure that any objects from a previous session are not present. We take this opportunity to keep our country ISO code in a variable iso in case we need it later.\n\n# Clean workspace\nrm(list = ls())\n\n# Georgia country ISO code\niso &lt;- \"GEO\"\n\n# Survey year\nsurvey_year &lt;- 2023\n\n# Exchange rate USD per GEL\ner &lt;- 0.37\n\n# Years of interest for our macroeconomic scenario analysis\nanalysis_years &lt;- c(2030, 2050)\n\nWe call the appropriate libraries.\nRather than calling our libraries as we go, we will make sure we have everything we need from the beginning.\n\nlibrary(tidyverse) # includes dplyr, ggplot2, purr...\nlibrary(haven)     # to read SPSS and Stata datasets\nlibrary(readxl)    # to read from MS-Excel\nlibrary(openxlsx)  # to write to MS-Excel.\nlibrary(gt)        # pretty tables\nlibrary(car)       # companion to applied regression\nlibrary(modelr)    # regression models\n#library(anesrake)  \n# Raking reweighting but we don't load it, because \n# it changes the meaning of summarize from dplyr, \n# so we use the form anesrake::anesrake() when using it.\n#library(ebal)      # Entropy reweighting (not used)\nlibrary(janitor)   # pretty subtotals\nlibrary(broom)     # More regressions\nlibrary(zoo)       # Calculate moving window average and max value\n# library(ineq) # Inequality measures\n# library(acid)\n\n# Geopackages\nlibrary(sf)        # to read and write shapefile maps\nlibrary(terra)     # to perform geocalculations\nlibrary(tmap)      # for static and interactive maps",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Georgia CCDR Microsimulation"
    ]
  },
  {
    "objectID": "supporting-materials/geo-microsimulation.html#datasets",
    "href": "supporting-materials/geo-microsimulation.html#datasets",
    "title": "Georgia CCDR Microsimulation",
    "section": "3 Datasets",
    "text": "3 Datasets\nWe then load the datasets that we need for this study. These are based on Georgia’s Integrated Living Conditions Survey 2022 (GEOSTAT, 2023). We take this oportunity to standardize the household identification variable to household_id.\n\n# Household size (includes no. of family members and weights)\nhh_size &lt;- read_sav(\n  \"data/ilcs_2023/familysize.sav\") %&gt;% \n  rename(household_id = UID)\n\n# Processed income at household level\nhh_income &lt;- read_sav(\n  \"data/ilcs_2023/tblincomes.sav\") %&gt;% \n  rename(household_id = UID)\n\n# Consumption aggregate at household level \nhh_expenditure &lt;- read_sav(\n  \"data/ilcs_2023/tblexpenditures.sav\") %&gt;% \n  rename(household_id = UID,\n         # rename total expenditure variables\n         total_expenditure = MTlianixarjebi_,\n         total_expenditure_aeq06 = MTlianimoxmareba_EqAdScale,\n         total_expenditure_aeq08 = Mtlianimoxmareba_EqAdScale_08)\n\n# Characteristics of the dwelling\nhh_chars &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda01.sav\") %&gt;% \n  rename(household_id = UID)\n\n# Household location\nhh_location &lt;- read_sav(\n  \"data/ilcs_2023/sysschedule.sav\") %&gt;% \n  rename(household_id = UID)\n\n# Persons (pp)\npp &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda02.sav\") %&gt;% \n  rename(household_id = UID)\n\n# Food diary\nfood_q &lt;- read_sav(\n  \"data/ilcs_2023/tblconsumption.sav\") %&gt;% \n  rename(household_id = UID)\n\nfood_price &lt;- read_sav( \n  \"data/ilcs_2023/tblavgprices.sav\")\n\nWe also have Continuous Labor Survey data at the individual level, which will come in handy if we do not get access to the labor part of the ILCS. See data folder for documents describing the datasets.\n\n# Labor Force Survey\nlfs_2023 &lt;- read_sav(\n  \"data/lfs_2023/LFS_ECSTAT_ENG_2023.sav\") %&gt;% \n  rename(household_id = UID)\n\n# Labor Force Survey Demographic Characteristics\nlfs_2023_dem &lt;- read_sav(\n  \"data/lfs_2023/LFS_Demographic_ENG_2023.sav\") %&gt;% \n  rename(household_id = UID)\n\nWe will work non-destructively, meaning we will not rewrite these data sets and we will only create intermediate data frame objects from them to perform transformations, selections and other data management tasks. For example, we will keep household assignment to poverty status and consumption deciles handy by creating a subset of our hh_expenditure data with only our household identifiers, deciles, and poverty if available.\n\n# We will estimate deciles from consumption\ndeciles &lt;- hh_expenditure %&gt;% \n  select( \n    # Keep household id and expenditure variables\n    household_id, \n    total_expenditure,\n    total_expenditure_aeq06, # Adult equivalent * 0.6\n    total_expenditure_aeq08) # Adult equivalent * 0.8\n\nOur population data comes from UN’s projections.\n\npopulation_projections &lt;- read_dta(\"data/population/UN2022_population.dta\") %&gt;% \n  filter(country == iso) # we filter for Georgia\n\nThe macro scenario dataset is an input provided by the Macroeconomic CGE simulation team, with yearly information on GDP, working age population, employment by economic activity (for an aggregation of three sectors: agriculture, manufacturing, and services), wages by economic activity, value added by economic activity, remittances, consumer price index, food price index and energy price index (for a bundle of gas, oil, coal, electricity) by decile (10 representative households in the macro model), and carbon tax revenue transfers to household deciles.\n\nscenario_file &lt;- \"data/ARM-Microsimulation/GEO_MacroScenarioInformation.xlsx\"\n# scenario_varlist &lt;- read_xlsx(\n#   \"data/ARM-Microsimulation/ARM_Macro_varlist.xlsx\")\n# prices_2030 &lt;- \n#   read.csv(\"data/ARM-Microsimulation/prices2030.csv\")\n\nEconomic Activities in the Survey is in Georgian. The following dataset is a lookup table with the English names.\n\n# Pending\nsectors &lt;- read_xlsx(\"data/ARM-HH-survey/economic_activity_codes.xlsx\")\n\nWe also have geographical information for level 1 in Shapefile format, which we import with the sf package. We rename the column with the name of the administrative region to match our household survey data set conventions to ease mergers. The dplyr package from the tidyverse meta package allows us to “pipe” or link processing steps using the %&gt;% pipe. Although there is no geoprocessing in this analysis, this will come in handy for graphical presentations.\n\n# Georgia administrative level 1 shapefile\nadm1 &lt;- sf::read_sf(\"data/gis/geo-adm1.shp\") |&gt; \n  dplyr::select(ADM1_PCODE, ADM1_EN, ADM1_KA, geometry) |&gt; \n  dplyr::arrange(ADM1_PCODE)\n\nAnd we plot it for reference (see Figure 2). This is done with the tmap R package and the code shown below.\n\ntmap::tm_shape(adm1)+\n  tmap::tm_fill(\"ADM1_EN\", legend.show = FALSE, palette = \"Set1\") +\n  tmap::tm_text(\"ADM1_EN\", size = 0.65, auto.placement = T, col = \"black\")+\n  tmap::tm_layout(frame = F)\n\n\n\n\n\n\n\nFigure 2: Map of Georgia at administrative level 1 (ADM1)",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Georgia CCDR Microsimulation"
    ]
  },
  {
    "objectID": "supporting-materials/geo-microsimulation.html#data-preparation-income-outliers-and-missings",
    "href": "supporting-materials/geo-microsimulation.html#data-preparation-income-outliers-and-missings",
    "title": "Georgia CCDR Microsimulation",
    "section": "4 Data preparation income outliers and missings",
    "text": "4 Data preparation income outliers and missings\nWe start with various renames for standardization. Naming conventions in the guidance code use traditional abbreviations like nli for non-lablor income. We are opting for more descriptive variable names like non_labor_income, labor_income, etc. to have more easily readable code. We make an exception for total consumption (tc), because it’s a variable that we use in every scenario and it supersedes lenght limits when adding scenario identifiers.\n\n# Uncomment the correct total expenditure variable below\nex &lt;- hh_expenditure %&gt;% \n  rename(\n    tc =\n      total_expenditure\n      #total_expenditure_aeq06 # Adult equivalent * 0.6\n      #total_expenditure_aeq08 # Adult equivalent * 0.8\n      )\n\n\n4.1 Demographic characteristics, education, labor force\nHere the original code calls for Zone data, which is not present in our dataset, due to the different administrative structure of Georgia. However, we use hh_01_code (settlement) for this purpose. In the end, this variable was never used.\nDemographic data, merge with zone data Note that ed_03 (educy) below is not years of education, but education level (primary, general, secondary, etc.) However, it is ordered in a way that higher levels imply more years of education. We perform several steps within the first pipe call. The variable lstatus (Labor Force Status) here is very important for the reweigthing of the dataset later on. Note that from here onwards we will be creating _microsim versions of our datasets with the transformations needed for calculations. That way we avoid changing our original data and can refer to it later without fearing we’ve left things behind.\n\npp_microsim &lt;- pp %&gt;%\n  mutate(\n    # Demographic characteristics\n    # Unique person id\n    person_id = paste0(household_id, \"-\", str_pad(MemberNo, 2, pad = \"0\")),\n    head = ifelse(Relations == 1, 1, 0),\n    # Education level\n    educy = ifelse(is.na(Education), 0, Education),\n    # Labor Force Status\n    lstatus = case_when(\n      # 1. Employed\n      est_03 == 1 | est_04 == 1 | est_05 == 1 |\n        est_06 == 1 | est_08 == 1 ~ 1L,\n      # 2. Unemployed (available, and searching)\n      est_10 == 1 ~ 2L,\n      # 3. Inactive (available, not searching)\n      est_10 == 2 ~ 3L,\n      # Out of the labor force\n      .default = 4L # Default to OLF\n    ),\n    employed = (lstatus == 1),\n    # Salaried status (1. paid employee; 2 self-employed)\n    salaried = ifelse(\n      !is.na(emp_11a),\n      1L,\n      ifelse(is.na(emp_11a) &\n               employed == TRUE, 0L, NA_integer_)\n    )\n  ) %&gt;%\n  rename(rel = mem_03, # relationship to HH head\n         gender = mem_02,\n         age = mem_05)\n\nLater, when we conduct the reweighting of the dataset, we need to summarize into three levels of education.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(calif = case_when(\n    educy &gt;= 0 & educy &lt;= 4 ~ \"None - General\",\n    educy &gt; 3 & educy &lt;= 9 ~ \"Secondary - Vocational\",\n    educy &gt; 7 & educy &lt;= 13 ~ \"Higher +\",\n    TRUE ~ NA_character_  # Values outside the specified ranges\n  ))\n\nCount the number of employed persons by household. Note that it is necessary to explicitly tell R to ignore missing values(NA). This is different from Stata where 1 + .= 1 (where . is “missing”). In R 1 + NA = NA (where NA means “not available”). Not adding na.rm = TRUE to aggregation functions such as sum() in Listing 1 below will not throw an error and only provide a column with NA for households where at least one individidual has an employed status of NA.\n\n\n\n\nListing 1: Employed in household\n\n\n# Pending data from pp_ecstat\nhh_labor &lt;- pp_ecstat %&gt;% \n  mutate(employed = (Status == 1)) %&gt;% \n  group_by(household_id) %&gt;% \n  # Count within each household\n  mutate(employed_hh = sum(employed, na.rm = TRUE)) %&gt;%   \n  ungroup() \n\n\n\n\nHere the original Stata code calculates income variables and aggregates them by household. We skip that because the dataset ic already has these elements calculated by the WB poverty team. We’ll add them later as we need them.\nHowever, as we’ll see later labor income information is heavily non-reported in the dataset. Labor income is a crucial step in merging the dataset with macroeconomic information and so we will predict income for those that do not report it below. These variables are related to labor income, amount and frequency, which we have to standardized to a monthly or yearly value.\nPrimary and Secondary Job income:\n\nemp_11 How much was %rostertitle%’s payment for wages/salary/income for last month?\nemp_12 What period of time was the wage/income for?\nemp_25 How much was %rostertitle%’s payment for wages/salary/income for last month?\nemp_26 What period of time was the wage/income for?\n\nBonus, In-Kind, and food from job was not asked in Georgia, If it were, you should add a mutate() statement like the ones below for each subcategory in Listing 2. We use coalesce(colname, 0) when adding the annual_labor_total again to prevent sums of NA’s. This function replaces a value with 0 within the calculation if it’s missing, but doesn’t change its value permanently.\n\n\n\n\nListing 2: Annualized labor income\n\n\npp_microsim &lt;- pp_microsim %&gt;% \n  # Labor income primary job\n  mutate(annual_labor_income_primary = case_when(\n    emp_12 == 1 ~ emp_11 * 365,\n    emp_12 == 2 ~ (emp_11/7) * 365,  # Assuming weekly rate \n    emp_12 == 3 ~ (emp_11/14) * 365,\n    emp_12 == 4 ~ emp_11 * 12,\n    emp_12 == 5 ~ emp_11 * 2,\n    emp_12 == 6 ~ emp_11,\n    emp_12 == 7 ~ NA\n  ))   %&gt;% \n  # Labor income secondary job\n  mutate(annual_labor_income_secondary = case_when(\n    emp_26 == 1 ~ emp_25 * 365,\n    emp_26 == 2 ~ (emp_25/7) * 365,  # Assuming weekly rate \n    emp_26 == 3 ~ (emp_25/14) * 365,\n    emp_26 == 4 ~ emp_25 * 12,\n    emp_26 == 5 ~ emp_25 * 2,\n    emp_26 == 6 ~ emp_25,\n    emp_26 == 7 ~ NA\n  )) %&gt;% \n  # Annual labor total in thousands of dram\n  mutate(annual_labor_total = \n           (coalesce(annual_labor_income_primary, 0) + \n           coalesce(annual_labor_income_secondary, 0))/1000)\n\n# Restore annual_labor_total to NA if both NA\npp_microsim &lt;- pp_microsim %&gt;% \n  mutate(annual_labor_total =\n           if_else(\n             is.na(annual_labor_income_primary)\n             & is.na(annual_labor_income_secondary),\n         NA, \n         annual_labor_total))\n\n\n\n\nNow we need to check the share of individuals that are employed, but did not report income. This is done in Listing 3 below.\n\n\n\n\nListing 3: Employed with no income reported\n\n\ntotal_employed_no_income &lt;- pp_microsim %&gt;%\n  filter(employed == TRUE & is.na(annual_labor_total)) %&gt;% \n  nrow()\n\ntotal_employed &lt;- pp_microsim %&gt;%\n  filter(employed == TRUE) %&gt;%\n  nrow()\n\npercent_employed_no_income &lt;- \n  (total_employed_no_income / total_employed) * 100\n\nprint(\n  paste0(\n    \"There is \",\n    format(\n      percent_employed_no_income,digits = 2, nsmall=2\n      ),\n    \"% of the employed population that reports no income.\")\n  )\n\n\n\n\nWe also need to mark income outliers as those with incomes outside 5 standard deviations.\n\npp_microsim &lt;- pp_microsim  %&gt;% \n  mutate(\n    # Calculate standard deviation\n    sd = sd(annual_labor_total, na.rm = TRUE), \n    d = annual_labor_total / sd,                \n    # Combined outlier condition\n    outlier = (d &gt; 5) | (employed == TRUE & annual_labor_total == 0), \n    # Mark potential missings\n    missings = if_else(employed == TRUE, is.na(annual_labor_total), NA) \n  ) \n\nEconomic sector. The economic sectors dataset contains a lookup table for sector aggregation which we add to the pp_microsim database in Listing 4.\n\n\n\n\nListing 4: Sector aggregation\n\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(emp_04 = as.integer(emp_04)) %&gt;% \n  left_join(sectors, join_by(\"emp_04\" == \"economic_activity_code\") ) %&gt;% \n  rename(sector = ea_shortcode)\n\n\n\n\nSome individuals report no sector for either their primary or secondary job. In Listing 5 we find out the sector of other family members in their home and assign the sector of whoever is closest using fill( other_sector, .direction = \"downup\").\n\n\n\n\nListing 5: Assign sector to those who don’t report one\n\n\npp_microsim &lt;- pp_microsim %&gt;%\n  group_by(household_id) %&gt;%\n  mutate(\n    # Create a temporary variable 'other_sector'\n    # which captures the sector of any employed \n    # individual in the household\n    other_sector = \n      if_else(employed == TRUE & !is.na(sector), sector, NA_real_)\n  ) %&gt;%\n  # Use 'fill' to propagate 'other_sector' values within the household\n  fill(other_sector, .direction = \"downup\") %&gt;%\n  mutate(\n    # Impute missing 'sector' values based on the 'other_sector'\n    sector = \n      if_else(is.na(sector) & employed == TRUE, other_sector, sector)\n  ) %&gt;%\n  # Drop the temporary 'other_sector' variable\n  select(-other_sector) %&gt;%\n  ungroup()\n\n\n\n\nWe then assign a specific value for missing sectors for those employed with no one else in the hh to assign value. We select services as it’s the heaviest sector in the dataset (we do it like this, instead of say, any matching technique, because it’s only 2 observations).\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(sector = if_else(is.na(sector) & employed == TRUE, 3, sector))\n\nWe provide value labels for sector factors.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(sector_name = factor(sector, levels = c(1, 2, 3),\n                         labels = c(\"Agriculture\", \n                                    \"Manufacturing\", \n                                    \"Services\")))\n\nWe make sure that those outside the labor force (OLF) do not report a sector, which we replace with NA for those who meet the condition.\n\n\n\n\nListing 6: No sector for OLF\n\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(lstatus = as.numeric(lstatus),\n         sector = \n           if_else(lstatus == 4, \n                   as.character(NA), \n                   as.character(sector)),\n         industry = as.factor(sector)) %&gt;%\n  # We need this for reweighting and \n  # not messing up the regression below.\n  mutate(sector_w = sector)\n\n\n\n\n\n\n4.2 The regression\nSince labor income was a key variable, which we needed to match with the future wage bill by economic activity, we first checked for missing values among employed individuals. We found that almost a third of respondents (28.6%) did not report income for either their primary or secondary job. To overcome this limitation, we used the available information from the remaining respondents to estimate an extended Mincer equation, as shown in Equation 1, and implemented in Listing 7. For the respondents with available information, we also identified outliers as those outside of five standard deviations from the mean labor income.\n\\[\n\\begin{equation}\n\\begin{split}\n\\ln(lab_i) = \\\\ \\beta_0 + \\beta_1 \\text{age}_i + \\\\\n\\beta_2 \\text{gender}_i + \\beta_3 \\text{educy}_i + \\\\\n\\beta_4 \\text{age}^2_i + \\beta_5 \\text{marz}_i + \\\\\n\\beta_6 \\text{sector}_i + \\epsilon_i\n\\end{split}\n\\end{equation}\n\\tag{1}\\]\nWhere:\n\n\\(\\ln(lab_i)\\) is the natural logarithm of labor income for individual \\(i\\).\n\\(\\beta_0\\) is the intercept term.\n\\(\\beta_1, \\beta_2, \\beta_3, \\beta_4, \\beta_5, \\beta_6\\) are the coefficients for the respective independent variables.\n\\(\\text{age}_i\\) is the age of individual \\(i\\).\n\\(\\text{gender}_i\\) is a binary variable indicating the gender of individual \\(i\\) (1 for male, 2 for female).\n\\(\\text{educy}_i\\) represents the level of education for individual \\(i\\) (ordered: 1) None to General, 2) Secondary to Vocational, 3) Higher education).\n\\(\\text{age}^2_i\\) is the square of the age of individual \\(i\\), included to capture non-linear effects of age on labor income.\n\\(\\text{marz}_i\\) represents the region where individual \\(i\\) resides.\n\\(\\text{sector}_i\\) represents the sector of employment for individual \\(i\\) (i.e., agriculture, manufacturing or services).\n\\(\\epsilon_i\\) is the error term for individual \\(i\\).\n\nWe first prepare our variables for the regression.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(\n    educy2 = educy^2,\n    age2 = age^2,\n    male = case_when(\n      gender == 1 ~ 1,\n      gender == 2 ~ 0\n    ),\n    lnlab = log(annual_labor_total),\n    simuli = NA_real_ # Initialize simuli\n  )\n\nFilter the data for regression conditions.\n\nregression_data &lt;- pp_microsim %&gt;%\n  filter(employed == TRUE & outlier == FALSE & missings == FALSE)\n\nRegression model.\n\n\n\n\nListing 7: Income regression model\n\n\nmodel &lt;- lm(lnlab ~ age + gender + educy + age2 + marz + sector, \n            data = regression_data)\n\n\n\n\nPredict for specific conditions\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(\n    condition = (lstatus == 1 & (outlier == TRUE | missings == TRUE))\n  )\n\nApplying predictions.\nNote: The ‘predict’ function in R does not directly support conditions within the function call, so we handle this by filtering or subsetting the data as needed.\ntemp2 equivalent - Note: ‘type = “response”’ might be needed depending on model type.\n\npp_microsim$simuli[pp_microsim$condition==TRUE] &lt;- exp(\n  predict(model, pp_microsim[pp_microsim$condition==TRUE, ], type = \"response\"))\n\nHandling negative values in ‘simuli’.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(\n    simuli = if_else(simuli &lt; 0, 0, simuli)\n  )\n\nThere were 8 observations that met the criteria:\nWe will replace annual_labor_total with this value for those observations.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  mutate(annual_labor_total = if_else(\n    employed == TRUE & (outlier == TRUE | missings == TRUE),\n    simuli, annual_labor_total))\n\n# And get monthly incomes for everyone\npp_microsim &lt;- pp_microsim %&gt;% \n  mutate(monthly_labor_income = annual_labor_total / 12)\n\nMerging datasets.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  left_join(poverty_designations, by = \"household_id\")\n\n\n\n4.3 Total income and shares\nTotal labor income at HH level.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  group_by(household_id) %&gt;%\n  mutate(lab_hh = sum(annual_labor_total, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nMonthly incomes come from the ic data set.\n\nincomes &lt;- ic %&gt;% \n  select(household_id, inc1, inc2, inc3, inc4, inc5, inc6, inc7, inc8)\n\nTotal income at HH level (the commented out portion was a less efficient way of accomplishing the same result of coalescing NAs to 0 so that the sum can be performed). Note that here we need to use the magittr pipe %&gt;% instead of the newer Native Pipe %&gt;% , because we need to reference the correct scope with the dot ..\n\npp_microsim &lt;- pp_microsim %&gt;%\n  left_join(incomes, by = c(\"household_id\" = \"household_id\")) %&gt;%\n  mutate(across(inc5:inc8, ~replace_na(., 0))) %&gt;%\n  mutate(nli_hh = 12 * rowSums(select(., inc5:inc8), na.rm = TRUE)) %&gt;%\n  mutate(income_hh = lab_hh + nli_hh)\n\n# pp_microsim &lt;- pp_microsim %&gt;%\n#   left_join(incomes, join_by(household_id == household_id)) %&gt;% \n#   mutate(nli_hh = (  coalesce(inc5) + \n#                      coalesce(inc6) +\n#                      coalesce(inc7) +\n#                      coalesce(inc8)) * 12) %&gt;% \n#   mutate(income_hh = lab_hh + nli_hh)\n\nFinal subset of data.\n\npp_microsim &lt;- pp_microsim %&gt;%\n  select(household_id, person_id, industry, salaried,\n         rural_dummy, hhsize,hhsize_R, marz_no, aepc, weight, \n         Foodpovln2022, Lpovln2022, Upovln2022, Avpovln2022, \n         poor_Foodpovln2022, poor_Lpovln2022, poor_Upovln2022, \n         poor_Avpovln2022, decile, settlement, urban_rural,\n         gender, age, head, rel, educy, calif, sector, sector_name,\n         annual_labor_total,annual_labor_income_primary,\n         annual_labor_income_secondary,monthly_labor_income,\n         lstatus, sector_w, marz.x ) %&gt;%\n  rename(marz = marz.x)\n\n# Exporting to Stata (might be necessary for reweigthing with wentropy)\n# write_dta(pp_microsim, path = \"outputs/pp_microsim.dta\", version = 10)",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Georgia CCDR Microsimulation"
    ]
  },
  {
    "objectID": "supporting-materials/geo-microsimulation.html#un-population-projections",
    "href": "supporting-materials/geo-microsimulation.html#un-population-projections",
    "title": "Georgia CCDR Microsimulation",
    "section": "5 UN Population Projections",
    "text": "5 UN Population Projections\nNow we are ready to move to our demographic projections and macroeconomic model information.\nFirst, filtering based on country (our iso variable).\n\npopulation_projections &lt;- population_projections  %&gt;%  \n  filter(country == iso)\n\nCollapsing data by summing up variables starting with “yf” and “ym” and reshaping data to long format.\n\npopulation_projections &lt;- population_projections %&gt;%\n  group_by(Variant, country, cohort) %&gt;%\n  summarize(across(starts_with(c(\"yf\", \"ym\")), sum)) %&gt;%\n  ungroup()\n\npopulation_projections &lt;- pivot_longer(population_projections,\n                              cols = starts_with(c(\"yf\", \"ym\")),\n                              names_to = c(\".value\", \"year\"),\n                              names_pattern = \"(yf|ym)(.*)\")\n\nCreating new variable total_population as the sum of yf and ym. Dropping country variables.\n\npopulation_projections &lt;- population_projections %&gt;%\n  mutate(total_population = yf + ym) %&gt;%\n  select( -country) %&gt;% \n  mutate(year = as.numeric(year))\n\nSummarizing the year to find the range.\n\nminyear &lt;- survey_year # Make sure `survey_year` is correctly defined\nmaxyear &lt;- max(as.numeric(population_projections$year))\n\nWe have that the “Min Year” is minyear and the “Max Year” is maxyear. Now we create a population growth rate by demographic variant dataset. We initialize an empty list to store our data by variant and we loop over variants to create this list.\n\n# With minyear and maxyear defined above\n# Initialize a list to store growth data\npop_growth &lt;- list()\n\n# Loop over variants\nvariants &lt;- unique(population_projections$Variant)\nfor (variant in variants) {\n  for (t in minyear:maxyear) {\n    \n    # Calculate population for year t\n    pop_t &lt;- population_projections %&gt;%\n      filter(year == t, Variant == variant) %&gt;%\n      summarize(sum_pop = sum(total_population)) %&gt;%\n      pull(sum_pop)\n    \n    # Calculate population for base year\n    pop_base &lt;- population_projections %&gt;%\n      filter(year == minyear, Variant == variant) %&gt;%\n      summarize(sum_pop = sum(total_population)) %&gt;%\n      pull(sum_pop)\n    \n    # Calculate growth rate and store in list with dynamic naming\n    growth_rate &lt;- pop_t / pop_base\n    pop_growth[[paste0(t, \"_\", variant)]] &lt;- list(\n      growth_rate = growth_rate, pop_t = pop_t\n      )\n  }\n}\n\nWith the list ready, we convert back to dataframe by stitching the list elements one on top of the other.\n\n# Convert list to dataframe\npop_growth &lt;- do.call(rbind, lapply(names(pop_growth), function(x) {\n  # Extract year and variant from the name\n  parts &lt;- unlist(strsplit(x, \"_\"))\n  year &lt;- as.integer(parts[1])\n  variant &lt;- parts[2]\n  \n  # Create a tibble for each entry\n  tibble(year = year, \n         variant = variant, \n         total_population = pop_growth[[x]]$pop_t,\n         pop_growth_rate = pop_growth[[x]]$growth_rate)\n}))\n\n# Arrange the dataframe for better readability\npop_growth &lt;- arrange(pop_growth, variant, year)\n\n# Display the first few rows of the dataframe\npop_growth[c(1:09),]",
    "crumbs": [
      "Home",
      "Supporting materials",
      "Georgia CCDR Microsimulation"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site was created for reproducibility purposes by World Bank consultant Renato Vargas.\nContact information:\n\nE-mail: hvargasaldana [at] worldbank [dot] org\nLinkedIn: https://www.linkedin.com/in/revargas/\nWebsite: renatovargas.com"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Georgia Country Climate and Development Report",
    "section": "",
    "text": "This website contains background documents and guides created for Georgia’s World Bank Country Climate and Development Report. Authorship is indicated in each document.\n\n\n\n\n\n\n\n\nFigure 1: Map of Georgia at administrative level 1 (ADM1)"
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html",
    "href": "supporting-materials/sam-shares-data-request.html",
    "title": "SAM Shares Data Request",
    "section": "",
    "text": "In this data request, we estimate shares to disaggregate the Social Accounting Matrix for the Macroeconomic team.\n\n\n\nHH split: Split our representative household into income quintiles and rural/urban households.\nLabor split: Split labor into 6 types according to gender and skill level.\nEconomic activity split: Split wages and capital by economic activities.\nSplit household consumption by urban/rural, quintiles and economic activity.\n\n(Addendum)\n\nFill out the wages and the quantity per employment status (Paid employee, Employer, self-employed and non-paid employees) (cells in yellow in file: SAMshares_GEO_v03.xlsx).\nSplit transfers (this part from ILCS 2023).\n\n\n\n\n\n# Clean workspace\nrm(list = ls())\n\n# Georgia country ISO code\niso &lt;- \"GEO\"\n\n# Survey year\nsurvey_year &lt;- 2023\n\n# Exchange rate USD per GEL\ner &lt;- 0.37\n\n# Years of interest for our macroeconomic scenario analysis\n# analysis_years &lt;- c(2030, 2050)\n\nWe will use the following libraries for this exercise.\n\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(gt)\n\n\n\n\nWe use data from the 2023 survey for the Labor Split and data from the 2022 survey for the household expenditure and capital shares in In mil. GEL per year per household type.\n\n #| lst-label: original-datasets\n\n# Household Unique ID, Weights, Location and other basic variables\nhh_basics &lt;- read_sav(\n  \"data/ilcs_2023/sysschedule.sav\") |&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Household size (includes no. of family members)\nhh_size &lt;- read_sav(\n  \"data/ilcs_2023/familysize.sav\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Processed income at household level\nhh_income &lt;- read_sav(\n  \"data/ilcs_2023/tblincomes.sav\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Consumption aggregate at household level \nhh_expenditure &lt;- read_sav(\n  \"data/ilcs_2023/tblexpenditures.sav\")|&gt; \n  rename(# rename total expenditure variables\n         total_expenditure = MTlianixarjebi_,\n         total_expenditure_aeq06 = MTlianimoxmareba_EqAdScale,\n         total_expenditure_aeq08 = Mtlianimoxmareba_EqAdScale_08) |&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Characteristics of the dwelling\nhh_chars &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda01.sav\")|&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Persons (pp)\npp &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda02.sav\") |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo))\n\n# Labor (pp)\npp_labor &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda05_1.sav\") |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo),\n    Q5  = as.integer(Q5),\n    Q12 = as.integer(Q12)) \n\n# Poverty\npoverty &lt;- read_dta(\n  \"data/ilcs_2023/POVERTY_stata.dta\") |&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Ind. Poverty\nind_poverty &lt;- read_dta(\n  \"data/ilcs_2023/IND_POVERTY_stata.dta\") |&gt; \n  rename(MemberNo = memberno) |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo))\n\nWe also need look-up tables.\n\nsam_activities &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"SAM-REV2\",\n    col_names = T,\n    col_types = \"text\",\n  )\n\nsam_factors &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"SAM factors\",\n    col_names = T,\n    col_types = \"text\",\n  )\n\ncoicop &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"COICOP\",\n    col_names = T,\n    col_types = \"text\",\n  ) |&gt; \n  mutate(simple_code = as.integer(gsub(\"\\\\.\", \"\", Coicop)))\n\ncoicop_filtered &lt;- coicop |&gt; \n  filter( nchar(as.character(simple_code)) &gt;= 5)\n\n\n\n\nFirst we check that our dataset amounts to population totals.\n\nweights &lt;- hh_basics |&gt; \n  select(UID, QuartNo, Weights)\n\nhh_size |&gt; \n  left_join(weights, join_by(UID)) |&gt; \n#  filter(QuartNo == 110) |&gt; \n  summarize(\n    \"Population\" = sum(FamilySize * Weights, na.rm = T),\n    \"Households\" = sum(Weights, na.rm = T)) |&gt; \n  gt()\n\n\n\n\n\n\n\nPopulation\nHouseholds\n\n\n\n\n14861930\n4499690\n\n\n\n\n\n\n\nUpon first exploration, we see that the population amounts to 14,861,930 individuals, living in 4,499,690 households, when in reality we have a total population estimate of 3,702,130 individuals, living in 1,109,130 households. This is because the survey covers four quarters and households are interviewed four times in the year. So we need to drop households for our estimates and keep only those related to one quarter. Since we need information for 2022, but our dataset is for 2023, we will use the first quarter (Q1), which is closer to the required year.\n\npop_by_quarter &lt;- hh_size |&gt; \n  left_join(weights, join_by(UID)) |&gt; \n  group_by(QuartNo) |&gt; \n  summarize(\n    \"Population\" = sum(FamilySize * Weights, na.rm = T),\n    \"Households\" = sum(Weights, na.rm = T))\n\npop_by_quarter |&gt; \n  gt()\n\n\n\n\n\n\n\nQuarter ID\nPopulation\nHouseholds\n\n\n\n\n107\n3713876\n1122110\n\n\n108\n3654991\n1114584\n\n\n109\n3729558\n1130628\n\n\n110\n3763505\n1132368",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#objectives",
    "href": "supporting-materials/sam-shares-data-request.html#objectives",
    "title": "SAM Shares Data Request",
    "section": "",
    "text": "HH split: Split our representative household into income quintiles and rural/urban households.\nLabor split: Split labor into 6 types according to gender and skill level.\nEconomic activity split: Split wages and capital by economic activities.\nSplit household consumption by urban/rural, quintiles and economic activity.\n\n(Addendum)\n\nFill out the wages and the quantity per employment status (Paid employee, Employer, self-employed and non-paid employees) (cells in yellow in file: SAMshares_GEO_v03.xlsx).\nSplit transfers (this part from ILCS 2023).",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#preliminaries",
    "href": "supporting-materials/sam-shares-data-request.html#preliminaries",
    "title": "SAM Shares Data Request",
    "section": "",
    "text": "# Clean workspace\nrm(list = ls())\n\n# Georgia country ISO code\niso &lt;- \"GEO\"\n\n# Survey year\nsurvey_year &lt;- 2023\n\n# Exchange rate USD per GEL\ner &lt;- 0.37\n\n# Years of interest for our macroeconomic scenario analysis\n# analysis_years &lt;- c(2030, 2050)\n\nWe will use the following libraries for this exercise.\n\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(gt)",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#datasets-and-correspondence-tables",
    "href": "supporting-materials/sam-shares-data-request.html#datasets-and-correspondence-tables",
    "title": "SAM Shares Data Request",
    "section": "",
    "text": "We use data from the 2023 survey for the Labor Split and data from the 2022 survey for the household expenditure and capital shares in In mil. GEL per year per household type.\n\n #| lst-label: original-datasets\n\n# Household Unique ID, Weights, Location and other basic variables\nhh_basics &lt;- read_sav(\n  \"data/ilcs_2023/sysschedule.sav\") |&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Household size (includes no. of family members)\nhh_size &lt;- read_sav(\n  \"data/ilcs_2023/familysize.sav\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Processed income at household level\nhh_income &lt;- read_sav(\n  \"data/ilcs_2023/tblincomes.sav\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Consumption aggregate at household level \nhh_expenditure &lt;- read_sav(\n  \"data/ilcs_2023/tblexpenditures.sav\")|&gt; \n  rename(# rename total expenditure variables\n         total_expenditure = MTlianixarjebi_,\n         total_expenditure_aeq06 = MTlianimoxmareba_EqAdScale,\n         total_expenditure_aeq08 = Mtlianimoxmareba_EqAdScale_08) |&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Characteristics of the dwelling\nhh_chars &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda01.sav\")|&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Persons (pp)\npp &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda02.sav\") |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo))\n\n# Labor (pp)\npp_labor &lt;- read_sav(\n  \"data/ilcs_2023/tblshinda05_1.sav\") |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo),\n    Q5  = as.integer(Q5),\n    Q12 = as.integer(Q12)) \n\n# Poverty\npoverty &lt;- read_dta(\n  \"data/ilcs_2023/POVERTY_stata.dta\") |&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Ind. Poverty\nind_poverty &lt;- read_dta(\n  \"data/ilcs_2023/IND_POVERTY_stata.dta\") |&gt; \n  rename(MemberNo = memberno) |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo))\n\nWe also need look-up tables.\n\nsam_activities &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"SAM-REV2\",\n    col_names = T,\n    col_types = \"text\",\n  )\n\nsam_factors &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"SAM factors\",\n    col_names = T,\n    col_types = \"text\",\n  )\n\ncoicop &lt;- read_excel(\n    \"data/sam/classifications.xlsx\",\n    sheet = \"COICOP\",\n    col_names = T,\n    col_types = \"text\",\n  ) |&gt; \n  mutate(simple_code = as.integer(gsub(\"\\\\.\", \"\", Coicop)))\n\ncoicop_filtered &lt;- coicop |&gt; \n  filter( nchar(as.character(simple_code)) &gt;= 5)",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#population-totals",
    "href": "supporting-materials/sam-shares-data-request.html#population-totals",
    "title": "SAM Shares Data Request",
    "section": "",
    "text": "First we check that our dataset amounts to population totals.\n\nweights &lt;- hh_basics |&gt; \n  select(UID, QuartNo, Weights)\n\nhh_size |&gt; \n  left_join(weights, join_by(UID)) |&gt; \n#  filter(QuartNo == 110) |&gt; \n  summarize(\n    \"Population\" = sum(FamilySize * Weights, na.rm = T),\n    \"Households\" = sum(Weights, na.rm = T)) |&gt; \n  gt()\n\n\n\n\n\n\n\nPopulation\nHouseholds\n\n\n\n\n14861930\n4499690\n\n\n\n\n\n\n\nUpon first exploration, we see that the population amounts to 14,861,930 individuals, living in 4,499,690 households, when in reality we have a total population estimate of 3,702,130 individuals, living in 1,109,130 households. This is because the survey covers four quarters and households are interviewed four times in the year. So we need to drop households for our estimates and keep only those related to one quarter. Since we need information for 2022, but our dataset is for 2023, we will use the first quarter (Q1), which is closer to the required year.\n\npop_by_quarter &lt;- hh_size |&gt; \n  left_join(weights, join_by(UID)) |&gt; \n  group_by(QuartNo) |&gt; \n  summarize(\n    \"Population\" = sum(FamilySize * Weights, na.rm = T),\n    \"Households\" = sum(Weights, na.rm = T))\n\npop_by_quarter |&gt; \n  gt()\n\n\n\n\n\n\n\nQuarter ID\nPopulation\nHouseholds\n\n\n\n\n107\n3713876\n1122110\n\n\n108\n3654991\n1114584\n\n\n109\n3729558\n1130628\n\n\n110\n3763505\n1132368",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#skill-level",
    "href": "supporting-materials/sam-shares-data-request.html#skill-level",
    "title": "SAM Shares Data Request",
    "section": "Skill level",
    "text": "Skill level\nFor skill level, we will use information on schooling from pp$Education (TblShinda02), which has the following levels:\n\nIlliterate\nDo not have primary education but can read and write\nPre-primary education\nPrimary education\nLower secondary education\nUpper secondary education\nVocational education without secondary general education\nVocational education on the base of lower secondary education with secondary general education certificate\nVocational education on the base of secondary general education (except higher professional education)\nHigher professional program\nBachelor or equivalent\nMaster or equivalent\nDoctor or equivalent\n\nWe need three skill levels for our SAM template, so we map these levels to:\nLow skill (1 - 5): Illiterate through lower secondary. Medium skill (6 - 9): Upper secondary through vocational education. High skill (10 - 13): Higher professional program through Doctor.\n\npp_factor_descriptors &lt;- pp |&gt;\n  select(UID, MemberNo, Gender, Age, Education) |&gt; \n  mutate(\n    MemberId = \n      paste0(sprintf(\"%06d\", UID), sprintf(\"%02d\", MemberNo))) |&gt;\n  mutate(Gender = factor(\n    Gender,\n    levels = c(1, 2),\n    labels = c(\"Female\", \"Male\")\n  )) |&gt; \n  mutate(\n    SkillLevel = case_when(\n      Education &gt;= 0 & Education &lt;= 5 ~ 1,\n      Education &gt; 5 & Education &lt;= 9 ~ 2,\n      Education &gt; 9 & Education &lt;= 13 ~ 3,\n      TRUE ~ NA ) ) |&gt; \n  mutate(\n    SkillLevel = factor(\n      SkillLevel, \n      levels = c( 1, 2, 3),\n      labels = c( \"Low Skill\", \"Medium Skill\", \"High Skill\"))\n  )\n\nNow that we have skill levels, we need to add information on urban/rural (from hh_basics) and quintile (from ind_poverty), and type of income earner (from pp_labor).\n\nurb_rur &lt;- hh_basics |&gt; \n  select(UID,QuartNo, UrbanOrRural, RegNo, Weights) |&gt; \n  mutate(\n    UrbanOrRural = factor(\n      UrbanOrRural,\n      levels = c(2,1),\n      labels = c(\"Rural\", \"Urban\")\n    )\n  )\n\nquintiles &lt;- poverty |&gt; \n  select(UID, quintilc) |&gt; \n  rename(Quintile = quintilc) |&gt; \n  mutate(\n    Quintile = factor(\n      Quintile,\n      levels = c(1:5),\n      labels = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\", \"Q5\")\n    )\n  )\n\npp_factor_descriptors &lt;- pp_factor_descriptors |&gt; \n  left_join(urb_rur, join_by(UID)) |&gt; \n  left_join(quintiles, join_by(UID))",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#labor-status-and-economic-activities",
    "href": "supporting-materials/sam-shares-data-request.html#labor-status-and-economic-activities",
    "title": "SAM Shares Data Request",
    "section": "Labor status and Economic Activities",
    "text": "Labor status and Economic Activities\nWe work with labor status from Shinda05_1. Since, upon import NACE 1 codes are converted to numbers, we need to convert them back to text, so that we can keep zeros to the left for proper order. We then extract the first two digits and match with 2-digit NACE Rev. 1 and find the correspondence to Rev. 2 from the SAM using the look-up table sam_activities. For proper order, we convert the SAM activities columns for job 1 and job 2 to factor, using the order from the dataset sam_factors.\n\npp_emstatus &lt;- pp_labor |&gt; \n  mutate(\n    MemberId = \n      paste0(sprintf(\"%06d\", UID), sprintf(\"%02d\", MemberNo))) |&gt;\n  mutate(\n    # Job 1 NACE Rev 1 code. \n    Q5  = if_else(!is.na(Q5),paste0(sprintf(\"%04d\", Q5)), NA),\n    # Job 2 NACE Rev 1 code.\n    Q12 = if_else(!is.na(Q12),paste0(sprintf(\"%04d\", Q12)), NA)) |&gt; \n  mutate(\n    job1 = if_else(!is.na(Q5),substr(Q5, 1, 2), NA),\n    job2 = if_else(!is.na(Q12),substr(Q12, 1, 2), NA)\n  ) |&gt; \n  # We match to Rev 2 and SAM classifications (for job 1 and job 2)\n  left_join(\n    sam_activities[,c(1,3)], \n    join_by(job1 == rev2_2d)) |&gt; \n  left_join(\n    sam_activities[,c(1,3)],\n    join_by(job2 == rev2_2d),\n    suffix = \n      c(\"_job1\", \"_job2\")) |&gt; \n  # And convert to factors for proper order\n  mutate(\n    SAM_job1 = factor(\n      SAM_job1, \n      levels = sam_factors$SAM,\n      # labels = sam_factors$SAM_description\n      ),\n    SAM_job2 = factor(\n      SAM_job2, \n      levels = sam_factors$SAM,\n      # labels = sam_factors$SAM_description\n      )\n  )\n\nhead(\n  pp_emstatus[c(18, 34, 40, 41, 67),\n  c(\"UID\", \"MemberNo\", \"SAM_job1\", \"SAM_job2\")]) |&gt; \n  gt()\n\n\n\n\n\n\n\nUID\nMemberNo\nSAM_job1\nSAM_job2\n\n\n\n\n386848\n1\na-trd\na-agri\n\n\n386855\n1\na-agri\na-agri\n\n\n386856\n1\na-food\na-agri\n\n\n386856\n2\na-agri\na-agri\n\n\n386866\n2\na-educ\na-educ",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#types-of-income",
    "href": "supporting-materials/sam-shares-data-request.html#types-of-income",
    "title": "SAM Shares Data Request",
    "section": "Types of income",
    "text": "Types of income\nBefore making our multi-dimensional tables, we need to identify different types of income. f-lab (wages) and f-surp (capital income). The instruction is that f-surp needs to be split into wages to entrepreneurs/self employed and capital income.\n\npp_emstatus &lt;- pp_emstatus |&gt; \n  mutate(\n    # We add accross three months for each source (and coalesce the NAs to 0)\n    flab_job1 = \n      rowSums(\n        across(starts_with(\"Q8_faqti_\"), \\(x) coalesce(x, 0))),\n    flab_job2 = \n      rowSums(\n        across(starts_with(\"Q14_faqti_\"), \\(x) coalesce(x, 0))),\n    fsurp = \n      rowSums(\n        across(starts_with(\"Q10_faqti_\"), \\(x) coalesce(x, 0)))\n  ) |&gt; \n  # We also add factor labels to Employment Status\n  mutate(\n    Q7 = factor(\n      Q7,\n      levels = c(1:6),\n      labels = c(\n        \"Employee\", \"Employer\", \"Own Account (Non-Ag.)\", \n        \"Own Account (Ag.)\", \"Unpaid Worker\", \"Other\"))\n    ) |&gt; \n  mutate(\n    Q13 = factor(\n      Q13,\n      levels = c(1:6),\n      labels = c(\n        \"Employee\", \"Employer\", \"Own Account (Non-Ag.)\", \n        \"Own Account (Ag.)\", \"Unpaid Worker\", \"Other\"))\n    )\n\nAnd we add our labor market variables to our pp_factor_descriptors dataset.\n\npp_emstatus &lt;- pp_emstatus |&gt;\n  select(-UID,-MemberNo) |&gt; \n  left_join(pp_factor_descriptors, join_by(MemberId)) |&gt; \n  relocate(c(UID, MemberNo, MemberId, QuartNo), .before = 1)",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#wages-and-surplus-income",
    "href": "supporting-materials/sam-shares-data-request.html#wages-and-surplus-income",
    "title": "SAM Shares Data Request",
    "section": "Wages and Surplus income",
    "text": "Wages and Surplus income\n\nflab1 &lt;- pp_emstatus |&gt; \n  select(\n    QuartNo,\n    Q7, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender, \n    flab_job1, \n    SAM_job1, \n    Weights) |&gt;\n  filter(!is.na(flab_job1) & flab_job1 &gt; 0) |&gt; \n  rename(\n    EmStatus = Q7,\n    FLab = flab_job1,\n    SAM = SAM_job1\n  ) |&gt; \n  mutate(\n    FLab = coalesce(FLab, 0) * Weights,\n    FactorType = \"f-lab\"\n  )\n\nflab2 &lt;- pp_emstatus |&gt; \n  select(\n    QuartNo,\n    Q13, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender, \n    flab_job2, \n    SAM_job2, \n    Weights) |&gt; \n  filter(!is.na(flab_job2) & flab_job2 &gt; 0) |&gt;\n  rename(\n    EmStatus = Q13,\n    FLab = flab_job2,\n    SAM = SAM_job2\n  ) |&gt; \n  mutate(\n    FLab = coalesce(FLab, 0) * Weights,\n    FactorType = \"f-lab\"\n  )\n\nfsurp &lt;- pp_emstatus |&gt; \n  select(\n    QuartNo,\n    Q7, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender, \n    fsurp, \n    SAM_job1, \n    Weights) |&gt;\n  filter(!is.na(fsurp)) |&gt; \n  rename(\n    EmStatus = Q7,\n    FLab = fsurp,\n    SAM = SAM_job1\n  ) |&gt; \n  mutate(\n    FLab = coalesce(FLab, 0) * Weights,\n    FactorType = \"f-surp\"\n  )\n\nflab &lt;- rbind(flab1, flab2, fsurp)\nis.na(flab$FLab) &lt;- 0",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#filling-out-the-templates",
    "href": "supporting-materials/sam-shares-data-request.html#filling-out-the-templates",
    "title": "SAM Shares Data Request",
    "section": "Filling out the templates",
    "text": "Filling out the templates\nWe first get a table with all the possible combinations, so we can make sure f-lab and f-surp have the data that we need.\n\nfactor_income &lt;- flab |&gt;\n  filter(\n    as.numeric(EmStatus) &lt; 6\n  ) |&gt; \n  group_by(\n    FactorType,\n    EmStatus, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender) |&gt; \n  summarize(FLab = sum(FLab, na.rm = T)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    id_cols = c(FactorType, EmStatus, UrbanOrRural, Quintile, SkillLevel),\n    names_from = c(Gender),\n    values_from = FLab ) |&gt;\n  pivot_wider(\n    id_cols = c(FactorType, EmStatus, UrbanOrRural, Quintile),\n    names_from = c(SkillLevel),\n    values_from = c(Female, Male) ) |&gt;\n  mutate(across(5:10, ~replace_na(., 0)))\n\n\nSalaries and mixed income\nSalaries from employees, salaries paid to business owners, and own account workers (mixed income).\n\nfactor_income_comprehensive &lt;- flab |&gt;\n  filter(\n    as.numeric(EmStatus) &lt; 6\n  ) |&gt; \n  group_by(\n    FactorType,\n    EmStatus, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender) |&gt; \n  summarize(FLab = sum(FLab, na.rm = T)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    id_cols = c(FactorType, EmStatus, UrbanOrRural, Quintile, SkillLevel),\n    names_from = c(Gender),\n    values_from = FLab ) |&gt;\n  pivot_wider(\n    id_cols = c(FactorType, EmStatus, UrbanOrRural, Quintile),\n    names_from = c(SkillLevel),\n    values_from = c(Female, Male) ) |&gt;\n  mutate(across(5:10, ~replace_na(., 0)))\n\n# Sneak peak\nhead(factor_income_comprehensive[,c(3:7)]) |&gt; \n  gt()\n\n\n\n\n\n\n\nUrbanOrRural\nQuintile\nFemale_Low Skill\nFemale_Medium Skill\nFemale_High Skill\n\n\n\n\nRural\nQ1\n6570741\n73766574\n40787523\n\n\nRural\nQ2\n3136840\n68728533\n61977982\n\n\nRural\nQ3\n3384631\n66745137\n62812282\n\n\nRural\nQ4\n2903820\n89122463\n101713498\n\n\nRural\nQ5\n3978437\n66745042\n211525604\n\n\nUrban\nQ1\n10106489\n140823577\n74910641\n\n\n\n\n\n\n\n\n\nWages\nNow we single out wages.\n\nfactor_income_wages &lt;- flab |&gt;\n  filter(\n    as.numeric(EmStatus) &lt; 6,\n    FactorType == \"f-lab\"\n  ) |&gt; \n  group_by( \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender) |&gt; \n  summarize(FLab = sum(FLab, na.rm = T)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    id_cols = c(UrbanOrRural, Quintile, SkillLevel),\n    names_from = c(Gender),\n    values_from = FLab ) |&gt;\n  pivot_wider(\n    id_cols = c(UrbanOrRural, Quintile),\n    names_from = c(SkillLevel),\n    values_from = c(Female, Male) ) |&gt;\n  mutate(across(3:8, ~replace_na(., 0)))\n\nfactor_income_wages |&gt; \n  gt()\n\n\n\n\n\n\n\nUrbanOrRural\nQuintile\nFemale_Low Skill\nFemale_Medium Skill\nFemale_High Skill\nMale_Low Skill\nMale_Medium Skill\nMale_High Skill\n\n\n\n\nRural\nQ1\n7071449\n73976896\n40873369\n13240854\n149888608\n35772884\n\n\nRural\nQ2\n3136840\n69199593\n62840081\n21365570\n185579382\n43775774\n\n\nRural\nQ3\n3384631\n68131258\n62812282\n9797217\n181840370\n53134918\n\n\nRural\nQ4\n2903820\n89812175\n101771027\n9141381\n243339688\n104186022\n\n\nRural\nQ5\n3978437\n67394473\n213109248\n6026684\n192906975\n206728152\n\n\nUrban\nQ1\n10106489\n140832561\n74981955\n9820052\n166174929\n50228610\n\n\nUrban\nQ2\n14984587\n143794440\n180076456\n23640281\n270874403\n171555924\n\n\nUrban\nQ3\n3875826\n251290586\n353147864\n5550498\n361493523\n395323768\n\n\nUrban\nQ4\n3120367\n236333189\n531182422\n2986762\n454390332\n583664654\n\n\nUrban\nQ5\n10523005\n215233168\n1088737655\n10546093\n386107080\n1244785293\n\n\n\n\n\n\n\n\n\nCapital\nAnd Capital.\n\nfactor_income_capital &lt;- flab |&gt;\n  filter(\n    as.numeric(EmStatus) &lt; 6,\n    FactorType == \"f-surp\"\n  ) |&gt; \n  group_by( \n    UrbanOrRural, \n    Quintile, \n    ) |&gt; \n  summarize(Capital = sum(FLab, na.rm = T)) |&gt; \n  ungroup()\n\nfactor_income_capital |&gt; \n  gt()\n\n\n\n\n\n\n\nUrbanOrRural\nQuintile\nCapital\n\n\n\n\nRural\nQ1\n57510741\n\n\nRural\nQ2\n77436983\n\n\nRural\nQ3\n104578879\n\n\nRural\nQ4\n124723382\n\n\nRural\nQ5\n203923504\n\n\nUrban\nQ1\n91338334\n\n\nUrban\nQ2\n172982396\n\n\nUrban\nQ3\n303575257\n\n\nUrban\nQ4\n397204825\n\n\nUrban\nQ5\n762309667\n\n\n\n\n\n\n\nAnd now, differentiated by economic activity.\n\nfactor_income_wages_activity &lt;- flab |&gt;\n  filter(\n    as.numeric(EmStatus) &lt; 6,\n    FactorType == \"f-lab\"\n  ) |&gt; \n  group_by( \n    Gender,\n    SkillLevel,\n    SAM) |&gt; \n  summarize(FLab = sum(FLab, na.rm = T)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    #id_cols = c(Gender, SkillLevel),\n    names_from = c(SAM),\n    names_expand = T,\n    names_sort = T,\n    values_from = FLab ) |&gt; \n  mutate(across(3:39, ~replace_na(., 0)))\n\n# factor_income_wages_activity |&gt; \n#   gt()\n\nAnd Capital.\n\nfactor_income_capital_activity &lt;- flab |&gt;\n  filter(\n    as.numeric(EmStatus) &lt; 6,\n    FactorType == \"f-surp\"\n  ) |&gt; \n  group_by( \n    SAM) |&gt; \n  summarize(\n    Capital = \"Capital\",\n    FLab = sum(FLab, na.rm = T)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    id_cols = c(Capital),\n    names_from = c(SAM),\n    names_expand = T,\n    names_sort = T,\n    values_from = FLab ) |&gt; \n  mutate(across(2:38, ~replace_na(., 0)))\n\n# factor_income_capital_activity |&gt; \n#   gt()\n\n\n\nAddendum: wages and quantity per employment status.\n\nfactor_income_wages_emStatus_activity &lt;- flab |&gt;\n  filter(\n    as.numeric(EmStatus) &lt; 5,\n    # FactorType == \"f-lab\"\n  ) |&gt;\n  group_by(\n    FactorType,\n    EmStatus,\n    Gender,\n    SkillLevel,\n    SAM) |&gt; \n  summarize(FLab = sum(FLab, na.rm = T),\n            .groups = \"keep\") |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    #id_cols = c(Gender, SkillLevel),\n    names_from = c(SAM),\n    names_expand = T,\n    names_sort = T,\n    values_fill = 0,\n    values_from = FLab ) |&gt; \n  complete(\n    FactorType,\n    EmStatus,\n    Gender,\n    SkillLevel\n  ) |&gt; \n  mutate(across(5:41, ~replace_na(., 0)))\n\nNumber of people.\n\nnoppl1 &lt;- pp_emstatus |&gt; \n  select(\n    QuartNo,\n    Q7, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender, \n    flab_job1, \n    SAM_job1, \n    Weights) |&gt;\n  filter(!is.na(flab_job1) & !is.na(Q7)) |&gt;\n  rename(\n    EmStatus = Q7,\n    FLab = flab_job1,\n    SAM = SAM_job1\n  ) |&gt; \n  mutate(\n    FLab = coalesce(FLab, 0) * Weights,\n    FactorType = \"f-lab\"\n  )\n\nnoppl2 &lt;- pp_emstatus |&gt; \n  select(\n    QuartNo,\n    Q13, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender, \n    flab_job2, \n    SAM_job2, \n    Weights) |&gt; \n  filter(!is.na(flab_job2 & !is.na(Q13))) |&gt;\n  rename(\n    EmStatus = Q13,\n    FLab = flab_job2,\n    SAM = SAM_job2\n  ) |&gt; \n  mutate(\n    FLab = coalesce(FLab, 0) * Weights,\n    FactorType = \"f-lab\"\n  )\n\nnopplsurp &lt;- pp_emstatus |&gt; \n  select(\n    QuartNo,\n    Q7, \n    UrbanOrRural, \n    Quintile, \n    SkillLevel,\n    Gender, \n    fsurp, \n    SAM_job1, \n    Weights) |&gt;\n  filter(!is.na(fsurp) & !is.na(Q7)) |&gt;\n  rename(\n    EmStatus = Q7,\n    FLab = fsurp,\n    SAM = SAM_job1\n  ) |&gt; \n  mutate(\n    FLab = coalesce(FLab, 0) * Weights,\n    FactorType = \"f-surp\"\n  )\n\nnoppl &lt;- rbind(noppl1, noppl2, nopplsurp)\nis.na(noppl$FLab) &lt;- 0\n\n\nno_people &lt;- noppl |&gt;\n  filter(\n    # as.numeric(EmStatus) &lt; 5,\n    QuartNo == 110,\n    !is.na(EmStatus)\n    # FactorType == \"f-lab\"\n  ) |&gt;\n  group_by(\n    FactorType,\n    EmStatus,\n    Gender,\n    SkillLevel,\n    SAM) |&gt; \n  summarize(No_People = sum(Weights, na.rm = T),\n            .groups = \"keep\") |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    #id_cols = c(Gender, SkillLevel),\n    names_from = c(SAM),\n    names_expand = T,\n    names_sort = T,\n    values_fill = 0,\n    values_from = No_People ) |&gt; \n  complete(\n    FactorType,\n    EmStatus,\n    Gender,\n    SkillLevel\n  ) |&gt; \n  mutate(across(5:41, ~replace_na(., 0)))",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#datasets-ilcs-2022",
    "href": "supporting-materials/sam-shares-data-request.html#datasets-ilcs-2022",
    "title": "SAM Shares Data Request",
    "section": "Datasets (ILCS 2022)",
    "text": "Datasets (ILCS 2022)\n\n# Household Unique ID, Weights, Location and other basic variables\nhh_basics_22 &lt;- read_dta(\n  \"data/ilcs_2022/sysschedule.dta\") |&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Household size (includes no. of family members)\nhh_size_22 &lt;- read_dta(\n  \"data/ilcs_2022/familysize.dta\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Processed income at household level\nhh_income_22 &lt;- read_dta(\n  \"data/ilcs_2022/tblincomes.dta\")|&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Consumption aggregate at household level \nhh_expenditure_22 &lt;- read_dta(\n  \"data/ilcs_2022/tblexpenditures.dta\")|&gt; \n  rename(# rename total expenditure variables\n         total_expenditure = MTlianixarjebi_,\n         total_expenditure_aeq06 = MTlianimoxmareba_EqAdScale,\n         total_expenditure_aeq08 = Mtlianimoxmareba_EqAdScale_08) |&gt; \n  mutate(\n    UID = as.integer(UID))\n\n# Characteristics of the dwelling\nhh_chars_22 &lt;- read_dta(\n  \"data/ilcs_2022/tblshinda01.dta\")|&gt;\n  mutate(\n    UID = as.integer(UID))\n\n# Persons (pp)\npp_22 &lt;- read_dta(\n  \"data/ilcs_2022/tblshinda02.dta\") |&gt; \n  mutate(\n    UID = as.integer(UID),\n    MemberNo = as.integer(MemberNo))\n\n\n# Poverty\npoverty_22 &lt;- read_dta(\n  \"data/ilcs_2022/POVERTY.dta\") |&gt; \n  mutate(\n    UID = as.integer(UID))\n\nHere we have the issue that for Household Expenditures the documentation claims to use COICOP, but we have a simple 5 digit structure that doesn’t match any of the forms of COICOP. There’s a processed dataset that summarizes the following:\nTotal cash consumption expenditure - On food, beverages, tobacco - On clothing and footwear - On household goods - On health care - On fuel and electricity - On transport - On education\nOther consumption expenditure - Non-consumption cash expenditure - On agricultural activity - On transfers - On saving and lending - On property acquisition\nWe will create pivot tables out of that with the 2022 Household Survey. ## Descriptors\nTransfers out\n\nurb_rur_22 &lt;- hh_basics_22 |&gt; \n  select(UID, UrbanOrRural, RegNo, Weights) |&gt; \n  mutate(\n    UrbanOrRural = factor(\n      UrbanOrRural,\n      levels = c(2,1),\n      labels = c(\"Rural\", \"Urban\")\n    )\n  )\n\nquintiles_22 &lt;- poverty_22 |&gt; \n  select(UID, quintilc) |&gt; \n  rename(Quintile = quintilc) |&gt; \n  mutate(\n    Quintile = factor(\n      Quintile,\n      levels = c(1:5),\n      labels = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\", \"Q5\")\n    )\n  )\n\nhh_consumption_22 &lt;- hh_expenditure_22 |&gt; \n  left_join(urb_rur_22, join_by(UID)) |&gt; \n  left_join(quintiles_22, join_by(UID)) |&gt; \n  rename(\n    \"CE. Food, beverages, and tobacco\" = sursati__sasmeli__Tambaqo,\n    \"CE. Clothing and footwear\" = tansacmeli,\n    \"CE. Household goods\" = saojaxo,\n    \"CE. Health care\" = samedicino,\n    \"CE. Fuel and electricity\" = energia,\n    \"CE. Transport\" = transporti,\n    \"CE. Education\" = ganatleba,\n    \"CE. Other consumption expenditure\" = sxva,\n    \"Total cash consumption expenditure\" = samomxmXarjebi,\n    \"NC. Agricultural activity\" = sasoflo,\n    \"NC. Transfers\" = transferti,\n    \"NC. Saving and lending\" = DazogvaAnCasesxeba,\n    \"NC. Property acquisition\" = qonebis_seZena,\n    \"Non-consumption cash expenditure\" = SxvaGasavlebi,\n    \"Non-cash expenditure\" = Arafuladi_moxm_,\n    \"Cash expenditure, total\" = fuladixarjebi,\n    \"Consumption expenditure, total\" = MTlianimoxmareba_,\n  )\n\nTransfers In\n\nurb_rur_22 &lt;- hh_basics_22 |&gt; \n  select(UID, UrbanOrRural, RegNo, Weights) |&gt; \n  mutate(\n    UrbanOrRural = factor(\n      UrbanOrRural,\n      levels = c(2,1),\n      labels = c(\"Rural\", \"Urban\")\n    )\n  )\n\nquintiles_22 &lt;- poverty_22 |&gt; \n  select(UID, quintilc) |&gt; \n  rename(Quintile = quintilc) |&gt; \n  mutate(\n    Quintile = factor(\n      Quintile,\n      levels = c(1:5),\n      labels = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\", \"Q5\")\n    )\n  )\n\nhh_incomes_22 &lt;- hh_income_22 |&gt; \n  left_join(urb_rur_22, join_by(UID)) |&gt; \n  left_join(quintiles_22, join_by(UID)) |&gt; \n  rename(\n    \"CI. From hired employment\" = ShemDaq,\n    \"CI. From self employment\" = ShemTviTdasaqm,\n    \"CI. From selling agricultural production\" = Shem_Sof,\n    \"CI. Property income (leasing, interest etc.)\" = Qonebidan,\n    \"CI. Pensions, scholarships, assistances\" = PensStipDaxm,\n    \"CI. Remittances from abroad\" = Ucxoetidan,\n    \"CI. Money received as a gift\" = Axloblebisagan,\n    \"CI. Property disposal\" = QonebisGayidvit,\n    \"CI. Income from borrowing and savings\" = SesxAnDanazog,\n  )",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  },
  {
    "objectID": "supporting-materials/sam-shares-data-request.html#template",
    "href": "supporting-materials/sam-shares-data-request.html#template",
    "title": "SAM Shares Data Request",
    "section": "Template",
    "text": "Template\nFirst we pivot our expenditures longer.\n\nhh_consumption_22 &lt;- hh_consumption_22 |&gt;\n  select(\n    -c(\n      `Total cash consumption expenditure`, \n      `Non-consumption cash expenditure`, \n      `Non-cash expenditure`, \n      `Cash expenditure, total`, \n      `Consumption expenditure, total`,\n      total_expenditure,\n      total_expenditure_aeq06, \n      total_expenditure_aeq08)) |&gt; \n  pivot_longer(\n    cols = c(\n    \"CE. Food, beverages, and tobacco\",\n    \"CE. Clothing and footwear\",\n    \"CE. Household goods\",\n    \"CE. Health care\",\n    \"CE. Fuel and electricity\",\n    \"CE. Transport\",\n    \"CE. Education\",\n    \"CE. Other consumption expenditure\",\n    \"NC. Agricultural activity\",\n    \"NC. Transfers\",\n    \"NC. Saving and lending\",\n    \"NC. Property acquisition\"\n    ),\n    names_to = \"ConsumptionCategory\", \n    values_to = \"Consumption\"\n  ) |&gt; \n  mutate(\n    ConsumptionCategory = factor(\n      ConsumptionCategory,\n      levels = c(\n        \"CE. Food, beverages, and tobacco\",\n        \"CE. Clothing and footwear\",\n        \"CE. Household goods\",\n        \"CE. Fuel and electricity\",\n        \"CE. Transport\",\n        \"CE. Education\",\n        \"CE. Health care\",\n        \"CE. Other consumption expenditure\",\n        \"NC. Agricultural activity\",\n        \"NC. Transfers\",\n        \"NC. Saving and lending\",\n        \"NC. Property acquisition\"\n      )\n    )\n  )\n\nAnd now we can fill our template.\n\nhh_consumption_pivot &lt;- hh_consumption_22 |&gt;\n  group_by( \n    ConsumptionCategory,\n    UrbanOrRural, \n    Quintile) |&gt; \n  summarize(\n    Consumption = sum((coalesce(Consumption, 0) * Weights), na.rm = T)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    #id_cols = c(Capital),\n    names_from = c(UrbanOrRural, Quintile),\n    names_expand = T,\n    names_sort = T,\n    values_from = Consumption )\n\nAnd now we pivot our incomes longer.\n\nhh_incomes_22 &lt;- hh_incomes_22 |&gt;\n  select(\n    -c(\n      ShemosavaliDaTransf,\n      SxvaFuladiSaxsrebi,\n      ArafuladiMoxmareba,\n      Shemosavalisul,\n      Fuladisaxsrebi,\n      Saxsrebi_Sul)) |&gt; \n  pivot_longer(\n    cols = c(\n    \"CI. From hired employment\",\n    \"CI. From self employment\",\n    \"CI. From selling agricultural production\", \n    \"CI. Property income (leasing, interest etc.)\",\n    \"CI. Pensions, scholarships, assistances\",\n    \"CI. Remittances from abroad\",\n    \"CI. Money received as a gift\",\n    \"CI. Property disposal\",\n    \"CI. Income from borrowing and savings\"\n    ),\n    names_to = \"IncomeCategory\", \n    values_to = \"Income\"\n  ) |&gt; \n  mutate(\n    IncomeCategory = factor(\n      IncomeCategory,\n      levels = c(\n        \"CI. From hired employment\",\n    \"CI. From self employment\",\n    \"CI. From selling agricultural production\", \n    \"CI. Property income (leasing, interest etc.)\",\n    \"CI. Pensions, scholarships, assistances\",\n    \"CI. Remittances from abroad\",\n    \"CI. Money received as a gift\",\n    \"CI. Property disposal\",\n    \"CI. Income from borrowing and savings\"\n      )\n    )\n  )\n\nAnd we fill our template\n\nhh_incomes_pivot &lt;- hh_incomes_22 |&gt;\n  group_by( \n    IncomeCategory,\n    UrbanOrRural, \n    Quintile) |&gt; \n  summarize(\n    Income = sum((coalesce(Income, 0) * Weights), na.rm = T)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(\n    #id_cols = c(Capital),\n    names_from = c(UrbanOrRural, Quintile),\n    names_expand = T,\n    names_sort = T,\n    values_from = Income )",
    "crumbs": [
      "Home",
      "Supporting materials",
      "SAM Shares Data Request"
    ]
  }
]